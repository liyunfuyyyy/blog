{"title":"HTML知识点","uid":"1b47919438b08a0e56e1fac60890eb9a","slug":"HTML知识点","date":"2022-03-15T01:13:09.000Z","updated":"2022-03-16T08:03:42.299Z","comments":true,"path":"api/articles/HTML知识点.json","keywords":null,"cover":null,"content":"<h2 id=\"1-如何理解HTML语义化\"><a href=\"#1-如何理解HTML语义化\" class=\"headerlink\" title=\"1. 如何理解HTML语义化\"></a>1. 如何理解HTML语义化</h2><p><strong>优点</strong></p>\n<ul>\n<li>对机器友好，更适合搜索引擎的爬取，有利于SEO。支持读屏软件，根据文章可以自动生成目录</li>\n<li>对开发者友好，增强可读性，结构更加清晰，便于维护</li>\n</ul>\n<p><strong>常见语义化标签</strong></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span><span class=\"token punctuation\">></span></span>头部<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span><span class=\"token punctuation\">></span></span>导航栏<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span><span class=\"token punctuation\">></span></span>区块(有语义化的div)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span><span class=\"token punctuation\">></span></span>主要区域<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>article</span><span class=\"token punctuation\">></span></span>主要内容<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>article</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>aside</span><span class=\"token punctuation\">></span></span>侧边栏<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>aside</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">></span></span>底部<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"2-常见块级和内联元素\"><a href=\"#2-常见块级和内联元素\" class=\"headerlink\" title=\"2. 常见块级和内联元素\"></a>2. 常见块级和内联元素</h2><p><strong>块级元素</strong></p>\n<ul>\n<li>div、h1、h2、table、ul、ol、p等</li>\n</ul>\n<p><strong>内联元素</strong></p>\n<ul>\n<li>span、img、input、button等</li>\n</ul>\n<h2 id=\"3-DOCTYPE-文档类型的作用\"><a href=\"#3-DOCTYPE-文档类型的作用\" class=\"headerlink\" title=\"3. DOCTYPE(文档类型的作用)\"></a>3. DOCTYPE(文档类型的作用)</h2><p>告诉浏览器（解析器）应该以什么样的文档类型（html或xhtml）定义来解析文档</p>\n<p>浏览器渲染页面的两种模式（可通过<code>document.compatMode</code> 获取）</p>\n<p><strong>CSS1Compat：标准模式(Strick mode)</strong> ，默认模式，浏览器使用W3C标准解析渲染页面，在标准模式下，浏览器以其支持的最高标准呈现页面</p>\n<p><strong>BackCompat：怪异模式(Qiock mode)</strong> ，浏览器以自己的怪异模式解析渲染页面，在怪异模式中，页面以一种比较宽松的向后兼容的方式显示</p>\n<p><strong>触发怪异模式的方式</strong></p>\n<ul>\n<li>IE浏览器</li>\n<li>不写DOCTYPE</li>\n<li><code>box-sizing:border-box</code> </li>\n</ul>\n<h2 id=\"4-src和href的区别\"><a href=\"#4-src和href的区别\" class=\"headerlink\" title=\"4. src和href的区别\"></a>4. src和href的区别</h2><ul>\n<li><strong>src</strong>：表示对资源的引用，指向的内容会被下载并嵌入到当前标签所在位置，如js脚本，当浏览器解析到该元素时，会暂停其他资源的下载和处理，指导该资源加载、编译、执行完毕，所以一半js脚本会放在页面底部</li>\n<li><strong>href</strong>：表示超文本引用，它指向一些网络资源，建立和当前元素或当前文档的链接关系，当浏览器识别到它指向的文件时，会并行下载资源，不会停止对当前文档的处理，常用在a、link等标签上</li>\n</ul>\n<h2 id=\"5-script标签中defer和async的区别\"><a href=\"#5-script标签中defer和async的区别\" class=\"headerlink\" title=\"5. script标签中defer和async的区别\"></a>5. script标签中defer和async的区别</h2><p>如果没有defer或async属性，浏览器会立即加载并执行相应的脚本。它不会等待后续加载的文档元素怒，读取到就会开始加载和执行，这样就阻塞了后续文档的加载。</p>\n<p><strong>defer和async属性都是去异步加载外部的JS脚本文件，它们都不会阻塞页面的解析</strong>，区别如下：</p>\n<ul>\n<li><strong>执行顺序</strong>：多个带async属性的标签，不能保证加载的顺序；多个带defer属性的标签，按照加载顺序执行</li>\n<li><strong>脚本是否并行执行</strong>：async属性，并行加载，并行执行；defer属性，并行加载，等到文档所有元素解析完成之后才执行，在DOMContentLoaded触发之前</li>\n</ul>\n<h2 id=\"6-常用的meta标签有哪些\"><a href=\"#6-常用的meta标签有哪些\" class=\"headerlink\" title=\"6. 常用的meta标签有哪些\"></a>6. 常用的meta标签有哪些</h2><ol>\n<li><code>charset</code> ，用来描述HTML文档的编码类型</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li><code>keywords</code> ，页面关键词</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>keywords<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>关键词<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li><code>description</code> ，页面描述</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>description<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>页面描述<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li><code>refresh</code> ，页面重定向和刷新</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>refresh<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0;url=<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li><code>viewport</code> ，适配移动端，可以控制视口的大小和比例</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width,initial-scale=1,maximum-scale=1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>content</code> 参数有以下几种</p>\n<ul>\n<li><code>width</code>：宽度(数值/device-width)</li>\n<li><code>height</code>：高度(数值/device-height)</li>\n<li><code>initial-scale</code>：初始缩放比例</li>\n<li><code>maximum-scale</code> ：最大缩放比例</li>\n<li><code>minimum-scale</code> ：最小缩放比例</li>\n<li><code>user-scalable</code>：是否允许用户缩放(yes/no)</li>\n</ul>\n<ol start=\"6\">\n<li>搜索引擎索引方式</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>robots<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index,follow<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>content</code> 参数有以下几种</p>\n<ul>\n<li><code>all</code>：文件将被检索，且页面上的链接可以被查询</li>\n<li><code>none</code>：文件不被检索，且页面上的链接不可以被查询</li>\n<li><code>index</code>：文件将被检索</li>\n<li><code>follow</code>：页面上的链接可以被查询</li>\n<li><code>noindex</code>：文件不被检索</li>\n<li><code>nofollow</code>：页面上的链接不可以被查询</li>\n</ul>\n<h2 id=\"7-HTML有哪些更新\"><a href=\"#7-HTML有哪些更新\" class=\"headerlink\" title=\"7. HTML有哪些更新\"></a>7. HTML有哪些更新</h2><h3 id=\"1-语义化标签\"><a href=\"#1-语义化标签\" class=\"headerlink\" title=\"1. 语义化标签\"></a>1. 语义化标签</h3><ul>\n<li><code>header</code>：头部</li>\n<li><code>nav</code>：导航</li>\n<li><code>footer</code>：底部</li>\n<li><code>article</code>：文章内容</li>\n<li><code>section</code>：文档中的节</li>\n<li><code>aside</code>：侧边栏</li>\n</ul>\n<h3 id=\"2-媒体标签\"><a href=\"#2-媒体标签\" class=\"headerlink\" title=\"2. 媒体标签\"></a>2. 媒体标签</h3><ol>\n<li>audio：音频</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span><span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">controls</span> <span class=\"token attr-name\">autoplay</span> <span class=\"token attr-name\">loop</span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>属性</p>\n<ul>\n<li><code>controls</code> 控制面板</li>\n<li><code>autoplay</code> 自动播放</li>\n<li><code>loop</code> 循环播放</li>\n</ul>\n<ol start=\"2\">\n<li>video：适配</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span><span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">poster</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>imgs/aa.jpg<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">controls</span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>属性</p>\n<ul>\n<li><code>poster</code> 指定封面</li>\n<li><code>controls</code> 控制面板</li>\n<li><code>width</code> 宽度</li>\n<li><code>height</code> 高度</li>\n</ul>\n<ol start=\"3\">\n<li>source标签，兼容不同的浏览器</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>aa.flv<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>video/flv<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>source</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>aa.mp4<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>video/mp4<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>source</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-表单\"><a href=\"#3-表单\" class=\"headerlink\" title=\"3. 表单\"></a>3. 表单</h3><p><strong>表单类型</strong></p>\n<ul>\n<li><code>email</code> 能够验证当前输入的邮箱地址是否合法</li>\n<li><code>url</code> 验证url</li>\n<li><code>number</code> 只能输入数字，自带点击增加减小箭头，max属性设置为最大值，min设置为最小值，value为默认值</li>\n<li><code>search</code> 可以一键删除输入内容</li>\n<li><code>range</code> 可以提供一个范围，其中可以设置max和min以及value，其中value属性可以设置为默认值</li>\n<li><code>color</code> 提供一个颜色拾取器</li>\n<li><code>time</code> 时间选择器</li>\n<li><code>data</code> 日期选择器</li>\n<li><code>datatime</code> 时间和日期</li>\n<li><code>datatime-local</code> 日期时间控件</li>\n<li><code>week</code> 周控件</li>\n<li><code>month</code> 月控件</li>\n</ul>\n<p><strong>表单属性</strong></p>\n<ul>\n<li><code>placeholder</code> 提示信息</li>\n<li><code>autofocus</code> 自动获取焦点</li>\n<li><code>autocomplete=&quot;on&quot;</code>或<code>autocomplete=&quot;off&quot;</code> 必须有name属性，并提交过，可以自动填写</li>\n<li><code>required</code> 不能为空</li>\n<li><code>pattern&quot;&quot;</code>里面写入想要的正则模式，例如手机号<code>pattern=&quot;^(+86)?\\d&#123;10&#125;$&quot;</code> </li>\n<li><code>mutiple</code> 可以选择多个我呢见或者多个邮箱</li>\n<li><code>form=form表单的ID</code></li>\n</ul>\n<p><strong>表单事件</strong></p>\n<ul>\n<li> <code>oninput</code> 每当input里的输入库内容发生变化都会触发此事件</li>\n<li><code>oninvalid</code> 当验证不通过时触发此事件</li>\n</ul>\n<h3 id=\"4-进度条、度量器\"><a href=\"#4-进度条、度量器\" class=\"headerlink\" title=\"4. 进度条、度量器\"></a>4. 进度条、度量器</h3><ul>\n<li><p><code>progress</code> 标签用来表示任务的进入，max表示最大，value表示已完成多少</p>\n</li>\n<li><p><code>meter</code> 属性：用来显示剩余容量或剩余库存</p>\n<ul>\n<li>high/low 规定被视作高/低的范围</li>\n<li>max/min 规定最大/小值</li>\n<li>value 规定当前度量值</li>\n</ul>\n<p>设置规则：min &lt; low &lt; hight &lt; max</p>\n</li>\n</ul>\n<h3 id=\"5-DOM查询操作\"><a href=\"#5-DOM查询操作\" class=\"headerlink\" title=\"5. DOM查询操作\"></a>5. DOM查询操作</h3><ul>\n<li><code>document.querySelector()</code></li>\n<li><code>document.querySelectorAll()</code></li>\n</ul>\n<h3 id=\"6-Web存储\"><a href=\"#6-Web存储\" class=\"headerlink\" title=\"6. Web存储\"></a>6. Web存储</h3><ul>\n<li><code>localStorage</code> - 没有时间限制的数据存储</li>\n<li><code>sessionStorage</code> - 针对一个session的数据存储</li>\n</ul>\n<h3 id=\"7-其他\"><a href=\"#7-其他\" class=\"headerlink\" title=\"7. 其他\"></a>7. 其他</h3><ul>\n<li>拖放：拖放是一种常见的特性，即抓取对象以后拖到另一个位置，设置元素可拖放</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">draggable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>画布：canvas元素使用JS在网页上绘制图像。画布是一个矩形区域，可以控制其每一像素。canvas拥有多种绘制路径、矩形、字符以及添加图像的方法</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myCanvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>SVG：可伸缩矢量图形，用来定义用于网络的基于矢量的图形，使用XML格式定义图形，图像的放大或改变尺寸的情况下其图像质量不会有损失，它是万维网联盟的标准</li>\n<li>地理位置：Geolocation用于定位用户的位置</li>\n</ul>\n<h3 id=\"移除\"><a href=\"#移除\" class=\"headerlink\" title=\"移除\"></a>移除</h3><ul>\n<li>纯表现的元素：basefont，big，center，font，s，strike，tt，u</li>\n<li>对可用性产生负面影响的元素：frame，frameset，noframes</li>\n</ul>\n<h2 id=\"8-img的srcset属性的作用\"><a href=\"#8-img的srcset属性的作用\" class=\"headerlink\" title=\"8. img的srcset属性的作用\"></a>8. img的srcset属性的作用</h2><p>响应式页面中经常用到根据屏幕密度设置不同的图片，这时就用到了img标签的srcset属性，srcset属性用于设置不同屏幕密度下，img会自动加载不同的图片，用法如下</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images-128.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images-256.png 2x<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image-128.png<span class=\"token punctuation\">\"</span></span>\n     <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image-128.png 128w, image-256.png 256w, image-512.png 512w<span class=\"token punctuation\">\"</span></span>\n     <span class=\"token attr-name\">sizes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(max-width: 360px) 340px, 128px<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>其中<code>srcset</code>指定图片的地址和对应的图片质量，<code>sizes</code> 设置临界点，可以按需加载</li>\n</ul>\n<h2 id=\"9-说一下web-worker\"><a href=\"#9-说一下web-worker\" class=\"headerlink\" title=\"9. 说一下web worker\"></a>9. 说一下web worker</h2><p>web worker为web内容在后台线程中运行脚本提供了一种简单的方法，线程可以执行任务而不干扰用户界面</p>\n<h2 id=\"10-HTML5的离线存储怎么使用，它的工作原理是什么\"><a href=\"#10-HTML5的离线存储怎么使用，它的工作原理是什么\" class=\"headerlink\" title=\"10. HTML5的离线存储怎么使用，它的工作原理是什么\"></a>10. HTML5的离线存储怎么使用，它的工作原理是什么</h2><p>离线存储指的是：在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件</p>\n<p><strong>原理</strong>： HTML5的离线存储是基于一个新建的<code>.appcache</code> 文件的缓存机制，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储下来，之后网络处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示</p>\n<p><strong>使用方法</strong></p>\n<ol>\n<li>创建一个和html同名的manifest文件，然后在页面头部加入manifest属性</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">manifest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index.manifest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>在<code>cache.manifest</code> 文件中编写需要离线存储的资源</li>\n</ol>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">CACHE MANIFEST\n    #v0.<span class=\"token number\">11</span>\n    CACHE<span class=\"token operator\">:</span>\n    js/app.js\n    css/style.css\n    NETWORK<span class=\"token operator\">:</span>\n    resourse/logo.png\n    FALLBACK<span class=\"token operator\">:</span>\n    / /offline.html\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>CACHE</strong> 表示需要离线存储的资源列表，由于包含manifest文件的页面将被自动离线存储，所以不需要把页面自身页列出来</li>\n<li><strong>NETWORK</strong> 表示在它下面列出来的资源只有在在线的情况下才能访问，它们不会被离线存储，所以在离线情况下无法使用这些资源，不过，如果在CACHE和NETWORK中有一个相同的资源，那么这个资源还是会被离线存储，也就是说CACHE的优先级更高</li>\n<li><strong>FALLBACK</strong> 表示如果访问第一个资源失败，那么就使用第二个资源来替换他，比如上面这个文件表示的就是如果访问根目录下任何一个资源失败了，那么就去访问<code>offline.html</code> </li>\n</ul>\n<ol start=\"3\">\n<li>在离线状态时，操作<code>window.applicationCache</code> 进行离线缓存的操作</li>\n</ol>\n<p><strong>如何更新缓存</strong></p>\n<ol>\n<li>更新manifest文件</li>\n<li>通过javascript操作</li>\n<li>清除浏览器缓存</li>\n</ol>\n<p><strong>注意事项</strong></p>\n<ol>\n<li>浏览器对缓存数据的容量限制可能不一样（某些浏览器设置的限制是每个站点5MD）</li>\n<li>如果manifest文件，或者内部列举的某一个文件不能正常下载，整个更新过程都将失败，浏览器继续全部使用老的缓存</li>\n<li>引用manifest的html必须与manifest文件同源，在同一个域下</li>\n<li>FALLBACK中的资源必须和manifest文件同源</li>\n<li>当一个资源被缓存后，该浏览器直接请求这个绝对路径也会访问缓存中的资源</li>\n<li>站点中的其他页面即使没有设置manifest属性，请求的资源如果在缓存中也从缓存中访问</li>\n<li>当manifest文件发生改变时，资源请求本身也会触发更新</li>\n</ol>\n<h2 id=\"11-浏览器是如何对HTML5的离线存储资源进行管理和加载\"><a href=\"#11-浏览器是如何对HTML5的离线存储资源进行管理和加载\" class=\"headerlink\" title=\"11. 浏览器是如何对HTML5的离线存储资源进行管理和加载\"></a>11. 浏览器是如何对HTML5的离线存储资源进行管理和加载</h2><ul>\n<li><strong>在线的情况下</strong>：浏览器发i西安html头部有manifest属性，它会请求manifest文件，如果是第一次访问页面，那么浏览器就会根据manifest文件的内容下载相应的资源并且进行离线缓存。如果已经访问过页面并且资源已经进行离线缓存，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的manifest文件和旧的manifest文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，就会重新下载文件中的资源并进行离线存储</li>\n<li><strong>离线的情况下</strong>浏览器会直接使用离线存储的资源</li>\n</ul>\n<h2 id=\"12-title与h1的区别、b与strong的区别、i与em的区别\"><a href=\"#12-title与h1的区别、b与strong的区别、i与em的区别\" class=\"headerlink\" title=\"12. title与h1的区别、b与strong的区别、i与em的区别\"></a>12. title与h1的区别、b与strong的区别、i与em的区别</h2><ul>\n<li>strong标签有语义，起到加强语气强调的效果，b标签没有语义，只是加粗标签，搜索引擎更侧重strong</li>\n<li>title属性没有明确意义只表示标题，H1则表示层次明确的标题，对页面信息的抓取有很大的影响</li>\n<li>i内容展示位斜体，em表示强调的文本</li>\n</ul>\n<h2 id=\"13-iframe有哪些优点\"><a href=\"#13-iframe有哪些优点\" class=\"headerlink\" title=\"13. iframe有哪些优点\"></a>13. iframe有哪些优点</h2><p><strong>优点</strong></p>\n<ul>\n<li>用来加载速度较慢的内容</li>\n<li>可以使脚本并行下载</li>\n<li>可以实现跨子域通信</li>\n</ul>\n<p><strong>缺点</strong></p>\n<ul>\n<li>iframe会阻塞主页面的onload事件</li>\n<li>无法被一些搜索引擎识别</li>\n<li>会产生很多页面，不易管理</li>\n</ul>\n<h2 id=\"14-label的作用是什么，如何使用\"><a href=\"#14-label的作用是什么，如何使用\" class=\"headerlink\" title=\"14. label的作用是什么，如何使用\"></a>14. label的作用是什么，如何使用</h2><p>用来定义表单控件的关系：点击label时，自动将焦点定位到与label相关的表单控件上</p>\n<ul>\n<li>使用方法  for控件的id  或者直接包裹</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mobile<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Phone<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mobile<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\nPhone:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"15-Canvas和SVG的区别\"><a href=\"#15-Canvas和SVG的区别\" class=\"headerlink\" title=\"15. Canvas和SVG的区别\"></a>15. Canvas和SVG的区别</h2><p><strong>SVG</strong> 可伸缩矢量图形，是基于XML描述的2D图形的语言，SVG基于XML就意味着SVG DOM中的每个元素都是可用的，可以为某个元素附加JS事件处理器，在SVG中，每个被绘制的图形均被视作对象，如果SVG对象的属性发生变化，那么浏览器能够自动重现图形</p>\n<p><strong>特点</strong></p>\n<ul>\n<li>不依赖分辨率</li>\n<li>支持事件处理器</li>\n<li>最适合带有大型渲染区域的应用程序(比如谷歌地图)</li>\n<li>复杂度高会减慢渲染速度(任何过度使用DOM的应用都不快)</li>\n<li>不适合游戏应用</li>\n</ul>\n<p><strong>Canvas</strong> 画布，通过JS来绘制2D图形，是逐像素进行渲染的，其位置发生改变，就会重新进行渲染</p>\n<p><strong>特点</strong></p>\n<ul>\n<li>依赖分辨率</li>\n<li>不支持事件处理器</li>\n<li>弱的文本渲染能力</li>\n<li>能够以.png或.jpg格式保存结果图像</li>\n<li>最适合图像密集型的游戏，其中的许多对象会被反复重绘</li>\n</ul>\n<h2 id=\"16-head标签有什么用，其中什么标签必不可少\"><a href=\"#16-head标签有什么用，其中什么标签必不可少\" class=\"headerlink\" title=\"16. head标签有什么用，其中什么标签必不可少\"></a>16. head标签有什么用，其中什么标签必不可少</h2><p>标签用于定义文档的头部，它是所有头部元素的容器，head中的元素可以引用脚本、指示浏览器在哪里找到样式表、提供元信息等</p>\n<p><strong>可在head中用的标签</strong></p>\n<ul>\n<li><code>&lt;base&gt;</code></li>\n<li><code>&lt;link&gt;</code></li>\n<li><code>&lt;meta&gt;</code></li>\n<li><code>&lt;script&gt;</code></li>\n<li><code>&lt;style&gt;</code></li>\n<li><code>&lt;title&gt;</code> 必需</li>\n</ul>\n<h2 id=\"17-浏览器乱码的原因是什么，如何解决\"><a href=\"#17-浏览器乱码的原因是什么，如何解决\" class=\"headerlink\" title=\"17. 浏览器乱码的原因是什么，如何解决\"></a>17. 浏览器乱码的原因是什么，如何解决</h2><p><strong>产生乱码的原因：</strong></p>\n<ul>\n<li>网页源代码是<code>gbk</code> 的编码，而内容中的中文字是<code>utf-8</code> 编码的，编码不匹配乱码</li>\n<li><code>html</code> 页面编码是<code>gbk</code> ，而程序从数据库中调出呈现是<code>utf-8</code>编码的内容也会造成乱码</li>\n<li>浏览器不能自动检测网页编码，造成乱码</li>\n</ul>\n<p><strong>解决办法：</strong></p>\n<ul>\n<li>使用软件编辑HTML网页内容</li>\n<li>使用网页涉资编码类型，如果数据库和网页不匹配编码，可以对中文进行转码，使用转码函数</li>\n<li>如果浏览器浏览时候出现网页乱码，在浏览器中找到转换编码的菜单进行转换</li>\n</ul>\n<h2 id=\"18-渐进增强和优雅降级之间的区别\"><a href=\"#18-渐进增强和优雅降级之间的区别\" class=\"headerlink\" title=\"18. 渐进增强和优雅降级之间的区别\"></a>18. 渐进增强和优雅降级之间的区别</h2><p>**渐进增强(progressice enhancement)**主要针对低版本的浏览器进行页面重构，保证基本的功能的情况下，再针对高级浏览器进行效果、交互等方面的改进和追加功能，以达到更好的用户体验</p>\n<p>**优雅降级(graceful degradation)**一开始就构建完整的功能，然后再针对低版本的浏览器进行兼容</p>\n<h2 id=\"19-说一下HTML5-drag-API\"><a href=\"#19-说一下HTML5-drag-API\" class=\"headerlink\" title=\"19. 说一下HTML5 drag API\"></a>19. 说一下HTML5 drag API</h2><ul>\n<li><code>dragstart</code> 事件主体是被拖放元素，在开始拖放被拖放元素时触发</li>\n<li><code>drag</code> 事件主体是被拖放元素，在正在拖放被拖放元素时触发</li>\n<li><code>dragenter</code> 事件主体时目标元素，在被拖放元素进入某元素时触发</li>\n<li><code>dragover</code> 事件主体是目标元素，在被拖放元素进入某元素时触发</li>\n<li><code>dragleave</code> 事件主体时目标元素，在被拖放元素移出目标元素时触发</li>\n<li><code>drop</code> 事件主体时目标元素，在目标元素完全接受被拖放元素时触发</li>\n<li><code>dragend</code> 事件主体是被拖放元素，在整个拖放操作结束时触发</li>\n</ul>\n<h2 id=\"20-网页开发中，如何实现图片的懒加载\"><a href=\"#20-网页开发中，如何实现图片的懒加载\" class=\"headerlink\" title=\"20. 网页开发中，如何实现图片的懒加载\"></a>20. 网页开发中，如何实现图片的懒加载</h2><p><strong>描述</strong>：懒加载，顾名思义，在当前网页，滑动页面到能看到图片的时候再加载图片</p>\n<p>直接将懒加载这事交给浏览器做，为图片加一个属性即可</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>kity.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">loading</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lazy<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h2 id=\"21-浏览器中如何实现剪切板复制内容的功能\"><a href=\"#21-浏览器中如何实现剪切板复制内容的功能\" class=\"headerlink\" title=\"21. 浏览器中如何实现剪切板复制内容的功能\"></a>21. 浏览器中如何实现剪切板复制内容的功能</h2><p><strong>描述</strong>：在一些博客系统中，可以复制代码，它是怎么实现的</p>\n<p>目前最为推荐的方式是用第三方库<code>Clipboard API</code>进行实现<a href=\"https://github.com/feross/clipboard-copy\">feross/clipboard-copy: Lightweight copy to clipboard for the web (github.com)</a></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">navigator<span class=\"token punctuation\">.</span>clipboard<span class=\"token punctuation\">.</span><span class=\"token function\">writeText</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>复制</strong></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"copy\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h2 id=\"22-localhost-3000和localhost-5000的cookie信息是否共享\"><a href=\"#22-localhost-3000和localhost-5000的cookie信息是否共享\" class=\"headerlink\" title=\"22. localhost:3000和localhost:5000的cookie信息是否共享\"></a>22. localhost:3000和localhost:5000的cookie信息是否共享</h2><p>根据同源策略，cookie是区分端口的，但是浏览器实现来说，<code>cookie</code> 区分域，而不区分端口，也就是说同一个ip下的cookie是共享的</p>\n<h2 id=\"23-什么是CSRF攻击\"><a href=\"#23-什么是CSRF攻击\" class=\"headerlink\" title=\"23. 什么是CSRF攻击\"></a>23. 什么是CSRF攻击</h2><p>CSRF跨站请求伪造，又称<code>one-click-attack</code> 顾名思义，通过恶意引导用户一次点击劫持<code>cookie</code>进行攻击，是一种挟制用户在当前已登录的 Web 应用程序上执行非本意的操作的攻击方法。跟跨网站脚本（XSS）相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。</p>\n<ol>\n<li>使用JSON API，当进行CSRF攻击时，请求体通过<code>&lt;form&gt;</code> 构建，请求头<code>application/www-form-urlencoded</code> 它难以发送JSON数据被服务器所理解</li>\n<li>CSRF Token，生成一个随机的token，切勿放在cookie中，每次请求手动携带该token进行校验</li>\n<li>SameSite Cookie，设置为Lax或者Strict，禁止发送第三方Cookie</li>\n</ol>\n<h2 id=\"24-在浏览器中如何监听剪切板中内容\"><a href=\"#24-在浏览器中如何监听剪切板中内容\" class=\"headerlink\" title=\"24. 在浏览器中如何监听剪切板中内容\"></a>24. 在浏览器中如何监听剪切板中内容</h2><p>通过<code>Clipboard API</code> 可以获取剪切板中内容，但需要获取到<code>clipboard-read</code> 权限</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 是否有读取权限</span>\n<span class=\"token keyword\">const</span> result<span class=\"token operator\">=</span><span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'clipboard-read'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 获取剪切板内容</span>\n<span class=\"token keyword\">const</span> text<span class=\"token operator\">=</span><span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>clipboard<span class=\"token punctuation\">.</span><span class=\"token function\">readText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"25-如何把json数据转化为demo-json并下载文件\"><a href=\"#25-如何把json数据转化为demo-json并下载文件\" class=\"headerlink\" title=\"25. 如何把json数据转化为demo.json并下载文件\"></a>25. 如何把json数据转化为demo.json并下载文件</h2><p>json视为字符串，可以使用<code>DataURL</code> 进行下载，<code>Text-&gt;DataURL</code> </p>\n<p>除了使用DataURL，还可以转化为Object URL进行下载</p>\n<p><code>Text - &gt; Blob -&gt; Object URL</code> </p>\n<p>可以把以下代码直接粘贴到控制台下载文件</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  a<span class=\"token punctuation\">.</span>download <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  a<span class=\"token punctuation\">.</span>rel <span class=\"token operator\">=</span> <span class=\"token string\">\"noopener\"</span><span class=\"token punctuation\">;</span>\n  a<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 触发模拟点击</span>\n  a<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 或者 a.click()</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 方案一：Text -> DataURL</span>\n<span class=\"token keyword\">const</span> dataUrl <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data:,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>str<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">download</span><span class=\"token punctuation\">(</span>dataUrl<span class=\"token punctuation\">,</span> <span class=\"token string\">\"demo.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 方案二：Text -> Blob -> ObjectURL</span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">download</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token string\">\"demo1.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>总结</strong></p>\n<ol>\n<li>模拟下载，可以通过新建一个<code>&lt;a href=&quot;url&quot; download&gt;</code> 标签并设置<code>url</code> 即<code>download</code> 属性来下载</li>\n<li>可以通过把<code>json</code> 转化为<code>dataurl</code> 来构造URL</li>\n<li>可以通过把<code>json</code>转化为<code>Blob</code> 再转化为<code>ObjectURL</code> 来构造URL</li>\n</ol>\n<h2 id=\"26-介绍requestIdleCallback及使用场景\"><a href=\"#26-介绍requestIdleCallback及使用场景\" class=\"headerlink\" title=\"26. 介绍requestIdleCallback及使用场景\"></a>26. 介绍requestIdleCallback及使用场景</h2><p><code>requestIdleCallback</code> 维护一个队列，将在浏览器空闲时间内执行，属于后台任务API，可以使用<code>setTimeout</code> 来模拟实现</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> rIC <span class=\"token operator\">=</span> window<span class=\"token punctuation\">[</span><span class=\"token string\">\"requestIdleCallback\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在<code>rIC</code> 中执行任务时需要注意以下几点：</p>\n<ol>\n<li>执行重计算而非紧急任务</li>\n<li>空闲回调任务时间应该小于50ms，最好更少</li>\n<li>空闲回调中不要操作DOM，因为它本来就是利用的重排重绘后的空闲时间，重新操作DOM又会造成重绘重排</li>\n</ol>\n<p>React的时间分片便是基于类似<code>rIC</code>而实现，然而因为<code>rIC</code>的见同行及50ms流畅问题，React自制了一个实现<code>scheduler</code> </p>\n<h2 id=\"27-如何计算白屏时间和首屏时间\"><a href=\"#27-如何计算白屏时间和首屏时间\" class=\"headerlink\" title=\"27. 如何计算白屏时间和首屏时间\"></a>27. 如何计算白屏时间和首屏时间</h2><p>白屏时间: window.performance.timing.domLoading - window.performance.timing.navigationStart</p>\n<p>首屏时间: window.performance.timing.domInteractive - window.performance.timing.navigationStart</p>\n<h2 id=\"28-什么是重排重绘，如何减少重排重绘\"><a href=\"#28-什么是重排重绘，如何减少重排重绘\" class=\"headerlink\" title=\"28. 什么是重排重绘，如何减少重排重绘\"></a>28. 什么是重排重绘，如何减少重排重绘</h2><p><strong>重排（Reflow）</strong>：元素的位置发生变动时发生重排，也叫回流</p>\n<p><strong>重绘（Repaint）</strong>：元素的样式发生变动，位置不变。</p>\n<p>重排必定造成重绘，有以下方法</p>\n<ol>\n<li>使用<code>DocumentFragment</code> 进行DOM操作，不过现在原生操作很少，基本用不到</li>\n<li>CSS样式尽量批量修改</li>\n<li>避免使用table布局</li>\n<li>为元素提前设置好宽高，不因多次渲染改变位置</li>\n</ol>\n<h2 id=\"29-什么时Data-URL\"><a href=\"#29-什么时Data-URL\" class=\"headerlink\" title=\"29.  什么时Data URL\"></a>29.  什么时Data URL</h2><p>Data URL时将图片转换为base64直接嵌入到网页中，使用<code>&lt;img src=&quot;data:[MIME type];base 64&quot; /&gt;</code> 这种方式引用图片，不需要再发送请求获取图片，缺点</p>\n<ul>\n<li>base64编码后的图片会比原来的体积大三分之一左右</li>\n<li>Data URL形式的图片不会缓存下来，每次访问页面都要被下载一次，可以将Data URL写入到CSS文件中随着CSS被缓存下来</li>\n</ul>\n<h2 id=\"30-textarea如何禁止拉伸\"><a href=\"#30-textarea如何禁止拉伸\" class=\"headerlink\" title=\"30. textarea如何禁止拉伸\"></a>30. textarea如何禁止拉伸</h2><p>使用CSS眼视光hi可以避免拉伸</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">textarea</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">resize</span><span class=\"token punctuation\">:</span>none\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"31-在Canvas中如何处理跨域的图片\"><a href=\"#31-在Canvas中如何处理跨域的图片\" class=\"headerlink\" title=\"31. 在Canvas中如何处理跨域的图片\"></a>31. 在Canvas中如何处理跨域的图片</h2><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">img<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'crossOrigin'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'anonymous'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h2 id=\"32-如何取消请求的发送\"><a href=\"#32-如何取消请求的发送\" class=\"headerlink\" title=\"32. 如何取消请求的发送\"></a>32. 如何取消请求的发送</h2><ol>\n<li>XHR使用<code>xhr.abort()</code> </li>\n</ol>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> xhr<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>method<span class=\"token operator\">=</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span>url<span class=\"token operator\">=</span><span class=\"token string\">\"https://www.baidu.com\"</span><span class=\"token punctuation\">;</span>\nxhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">,</span>url<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n\nxhr<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 取消发送请求</span>\nxhr<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>fetch使用<code>AbortController</code></li>\n</ol>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AbortController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> signal <span class=\"token operator\">=</span> controller<span class=\"token punctuation\">.</span>signal\n\n<span class=\"token keyword\">const</span> downloadBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.download'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> abortBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.abort'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndownloadBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> fetchVideo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 点击取消按钮时，取消请求的发送</span>\nabortBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  controller<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Download aborted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fetchVideo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>signal<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// 请求被取消之后将会得到一个 AbortError</span>\n    reports<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Download error: '</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>Axios使用<code>cancelToken</code> 取消</li>\n</ol>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> CancelToken<span class=\"token operator\">=</span>axios<span class=\"token punctuation\">.</span>CancelToken\n<span class=\"token keyword\">const</span> source<span class=\"token operator\">=</span>CancelToken<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\naxios\n  <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/user/1234'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">cancelToken</span><span class=\"token operator\">:</span>souce<span class=\"token punctuation\">.</span>token\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">thrown</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>axios<span class=\"token punctuation\">.</span><span class=\"token function\">isCancel</span><span class=\"token punctuation\">(</span>thrown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'request canceled'</span><span class=\"token punctuation\">,</span>thrown<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// handle error</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\naxios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">'/user/123'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'new name'</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">cancelToken</span><span class=\"token operator\">:</span>source<span class=\"token punctuation\">.</span>token\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span>\n\nsource<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'operation canceled by the user'</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"1. 如何理解HTML语义化优点 对机器友好，更适合搜索引擎的爬取，有利于SEO。支持读屏软件，根据文章可以自动生成目录 对开发者友好，增强可读性，结构更加清晰，便于维护 常见语义化标签 &lt;header>头部&lt;/header> &lt;nav>导航栏&lt;/nav>...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"知识点","slug":"知识点","count":7,"path":"api/categories/知识点.json"}],"tags":[{"name":"面试","slug":"面试","count":3,"path":"api/tags/面试.json"},{"name":"HTML","slug":"HTML","count":1,"path":"api/tags/HTML.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3HTML%E8%AF%AD%E4%B9%89%E5%8C%96\"><span class=\"toc-text\">1. 如何理解HTML语义化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%B8%B8%E8%A7%81%E5%9D%97%E7%BA%A7%E5%92%8C%E5%86%85%E8%81%94%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">2. 常见块级和内联元素</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-DOCTYPE-%E6%96%87%E6%A1%A3%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">3. DOCTYPE(文档类型的作用)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-src%E5%92%8Chref%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">4. src和href的区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-script%E6%A0%87%E7%AD%BE%E4%B8%ADdefer%E5%92%8Casync%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">5. script标签中defer和async的区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E5%B8%B8%E7%94%A8%E7%9A%84meta%E6%A0%87%E7%AD%BE%E6%9C%89%E5%93%AA%E4%BA%9B\"><span class=\"toc-text\">6. 常用的meta标签有哪些</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-HTML%E6%9C%89%E5%93%AA%E4%BA%9B%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">7. HTML有哪些更新</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">1. 语义化标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%AA%92%E4%BD%93%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">2. 媒体标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E8%A1%A8%E5%8D%95\"><span class=\"toc-text\">3. 表单</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E8%BF%9B%E5%BA%A6%E6%9D%A1%E3%80%81%E5%BA%A6%E9%87%8F%E5%99%A8\"><span class=\"toc-text\">4. 进度条、度量器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-DOM%E6%9F%A5%E8%AF%A2%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">5. DOM查询操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-Web%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">6. Web存储</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E5%85%B6%E4%BB%96\"><span class=\"toc-text\">7. 其他</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A7%BB%E9%99%A4\"><span class=\"toc-text\">移除</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-img%E7%9A%84srcset%E5%B1%9E%E6%80%A7%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">8. img的srcset属性的作用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-%E8%AF%B4%E4%B8%80%E4%B8%8Bweb-worker\"><span class=\"toc-text\">9. 说一下web worker</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10-HTML5%E7%9A%84%E7%A6%BB%E7%BA%BF%E5%AD%98%E5%82%A8%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8%EF%BC%8C%E5%AE%83%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">10. HTML5的离线存储怎么使用，它的工作原理是什么</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%AF%E5%A6%82%E4%BD%95%E5%AF%B9HTML5%E7%9A%84%E7%A6%BB%E7%BA%BF%E5%AD%98%E5%82%A8%E8%B5%84%E6%BA%90%E8%BF%9B%E8%A1%8C%E7%AE%A1%E7%90%86%E5%92%8C%E5%8A%A0%E8%BD%BD\"><span class=\"toc-text\">11. 浏览器是如何对HTML5的离线存储资源进行管理和加载</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#12-title%E4%B8%8Eh1%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%81b%E4%B8%8Estrong%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%81i%E4%B8%8Eem%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">12. title与h1的区别、b与strong的区别、i与em的区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#13-iframe%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">13. iframe有哪些优点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#14-label%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%8C%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">14. label的作用是什么，如何使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#15-Canvas%E5%92%8CSVG%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">15. Canvas和SVG的区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#16-head%E6%A0%87%E7%AD%BE%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8%EF%BC%8C%E5%85%B6%E4%B8%AD%E4%BB%80%E4%B9%88%E6%A0%87%E7%AD%BE%E5%BF%85%E4%B8%8D%E5%8F%AF%E5%B0%91\"><span class=\"toc-text\">16. head标签有什么用，其中什么标签必不可少</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#17-%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B9%B1%E7%A0%81%E7%9A%84%E5%8E%9F%E5%9B%A0%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%8C%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3\"><span class=\"toc-text\">17. 浏览器乱码的原因是什么，如何解决</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#18-%E6%B8%90%E8%BF%9B%E5%A2%9E%E5%BC%BA%E5%92%8C%E4%BC%98%E9%9B%85%E9%99%8D%E7%BA%A7%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">18. 渐进增强和优雅降级之间的区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#19-%E8%AF%B4%E4%B8%80%E4%B8%8BHTML5-drag-API\"><span class=\"toc-text\">19. 说一下HTML5 drag API</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#20-%E7%BD%91%E9%A1%B5%E5%BC%80%E5%8F%91%E4%B8%AD%EF%BC%8C%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E7%9A%84%E6%87%92%E5%8A%A0%E8%BD%BD\"><span class=\"toc-text\">20. 网页开发中，如何实现图片的懒加载</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#21-%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%89%AA%E5%88%87%E6%9D%BF%E5%A4%8D%E5%88%B6%E5%86%85%E5%AE%B9%E7%9A%84%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">21. 浏览器中如何实现剪切板复制内容的功能</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#22-localhost-3000%E5%92%8Clocalhost-5000%E7%9A%84cookie%E4%BF%A1%E6%81%AF%E6%98%AF%E5%90%A6%E5%85%B1%E4%BA%AB\"><span class=\"toc-text\">22. localhost:3000和localhost:5000的cookie信息是否共享</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#23-%E4%BB%80%E4%B9%88%E6%98%AFCSRF%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">23. 什么是CSRF攻击</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#24-%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E5%A6%82%E4%BD%95%E7%9B%91%E5%90%AC%E5%89%AA%E5%88%87%E6%9D%BF%E4%B8%AD%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">24. 在浏览器中如何监听剪切板中内容</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#25-%E5%A6%82%E4%BD%95%E6%8A%8Ajson%E6%95%B0%E6%8D%AE%E8%BD%AC%E5%8C%96%E4%B8%BAdemo-json%E5%B9%B6%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">25. 如何把json数据转化为demo.json并下载文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#26-%E4%BB%8B%E7%BB%8DrequestIdleCallback%E5%8F%8A%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">26. 介绍requestIdleCallback及使用场景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#27-%E5%A6%82%E4%BD%95%E8%AE%A1%E7%AE%97%E7%99%BD%E5%B1%8F%E6%97%B6%E9%97%B4%E5%92%8C%E9%A6%96%E5%B1%8F%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">27. 如何计算白屏时间和首屏时间</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#28-%E4%BB%80%E4%B9%88%E6%98%AF%E9%87%8D%E6%8E%92%E9%87%8D%E7%BB%98%EF%BC%8C%E5%A6%82%E4%BD%95%E5%87%8F%E5%B0%91%E9%87%8D%E6%8E%92%E9%87%8D%E7%BB%98\"><span class=\"toc-text\">28. 什么是重排重绘，如何减少重排重绘</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#29-%E4%BB%80%E4%B9%88%E6%97%B6Data-URL\"><span class=\"toc-text\">29.  什么时Data URL</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#30-textarea%E5%A6%82%E4%BD%95%E7%A6%81%E6%AD%A2%E6%8B%89%E4%BC%B8\"><span class=\"toc-text\">30. textarea如何禁止拉伸</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#31-%E5%9C%A8Canvas%E4%B8%AD%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E8%B7%A8%E5%9F%9F%E7%9A%84%E5%9B%BE%E7%89%87\"><span class=\"toc-text\">31. 在Canvas中如何处理跨域的图片</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#32-%E5%A6%82%E4%BD%95%E5%8F%96%E6%B6%88%E8%AF%B7%E6%B1%82%E7%9A%84%E5%8F%91%E9%80%81\"><span class=\"toc-text\">32. 如何取消请求的发送</span></a></li></ol>","author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://gitee.com/LUNIONT/img-url/raw/master/202201011746808.jpg","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}},"mapped":true,"prev_post":{"title":"CSS知识点","uid":"82a5309356b9c984c2a532692d47ab73","slug":"CSS面试题","date":"2022-03-15T05:02:20.000Z","updated":"2022-03-16T08:04:12.309Z","comments":true,"path":"api/articles/CSS面试题.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"知识点","slug":"知识点","count":7,"path":"api/categories/知识点.json"}],"tags":[{"name":"css","slug":"css","count":2,"path":"api/tags/css.json"},{"name":"面试","slug":"面试","count":3,"path":"api/tags/面试.json"}],"author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://gitee.com/LUNIONT/img-url/raw/master/202201011746808.jpg","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}}},"next_post":{"title":"常用算法","uid":"50ba5796497ecb4fe11ec2fa6f32ff0a","slug":"常用算法","date":"2022-03-14T10:17:13.000Z","updated":"2022-03-16T03:56:04.199Z","comments":true,"path":"api/articles/常用算法.json","keywords":null,"cover":[],"text":"题目1 - 将一个数组旋转k步 输入数组[1,2,3,4,5,6,7] k=3,即旋转3步 输出[5,6,7,1,2,3,4] const arr = [1, 2, 3, 4, 5, 6, 7] function rotate2(arr, k) &#123; const leng...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[{"name":"知识点","slug":"知识点","count":7,"path":"api/categories/知识点.json"}],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"},{"name":"数据结构","slug":"数据结构","count":1,"path":"api/tags/数据结构.json"}],"author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://gitee.com/LUNIONT/img-url/raw/master/202201011746808.jpg","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}}}}