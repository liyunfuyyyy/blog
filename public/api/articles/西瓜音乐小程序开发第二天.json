{"title":"西瓜音乐小程序开发第二天","uid":"72f191bcb7ec59bd5f1454660b2b3dff","slug":"西瓜音乐小程序开发第二天","date":"2022-02-10T07:54:45.000Z","updated":"2022-05-27T07:49:11.254Z","comments":true,"path":"api/articles/西瓜音乐小程序开发第二天.json","keywords":null,"cover":[],"content":"<p>✅ 引入第三方 UI 库 vant<br>✅ 封装 banner 请求<br>✅ 实时获取组件高度解决不同屏幕中的 swiper 样式问题<br>✅ 使用节流函数优化性能</p>\n<ul>\n<li>今日完成效果</li>\n</ul>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/50d59d5fd3684501adb23fb43baaaa96~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>\\</p>\n<h2 id=\"引入-vantUI-库\"><a href=\"#引入-vantUI-库\" class=\"headerlink\" title=\"引入 vantUI 库\"></a>引入 vantUI 库</h2><h3 id=\"步骤如下\"><a href=\"#步骤如下\" class=\"headerlink\" title=\"步骤如下\"></a>步骤如下</h3><ol>\n<li> 第一步进入微信开发工具，点开详情，勾选使用 npm 模块，并调低基础库，由于当前测试基础库<code>2.22.0</code>无法正常显示 vant 中的<code>van-search</code>标签，遂调低基础库至<code>2.21.2</code></li>\n</ol>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/306b395d56da45df8efcf9871de9dee3~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<ol start=\"2\">\n<li> 打开终端，初始化<code>package.json</code>并且安装 vant 依赖 <code>npm i @vant/weapp</code></li>\n</ol>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f3eb1d7f44ec471384fce55364c0c859~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c746a90065fe4bec81a4a6c3c1231d53~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p>\\</p>\n<ol start=\"3\">\n<li> 点击工具菜单中的构建 npm，等待构建完成，自动产生<code>miniprogram_npm</code>这就是小程序依赖的包</li>\n</ol>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b7b6e39d71654f869fbe59c3c9001cdf~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e03ef6a2abf84b28ae0e8e9566840363~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<ol start=\"4\">\n<li> 最后删除 app.json 中的<code>style:v2</code>防止样式冲突</li>\n</ol>\n<h2 id=\"使用第三方-UI-库\"><a href=\"#使用第三方-UI-库\" class=\"headerlink\" title=\"使用第三方 UI 库\"></a>使用第三方 UI 库</h2><ol>\n<li> 在<code>pages/home-music/index.json</code>中导入需要的<code>search</code>组件</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n  &quot;usingComponents&quot;: &#123;\n    &quot;van-search&quot;: &quot;@vant&#x2F;weapp&#x2F;search&#x2F;index&quot;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li> 在<code>pages/home-music/index.wxml</code>中使用<code>search</code>组件</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!--pages&#x2F;home-music&#x2F;index.wxml--&gt;\n&lt;!-- 搜索框 --&gt;\n&lt;van-search disabled  placeholder&#x3D;&quot;搜索您喜欢的歌曲&quot; background&#x3D;&quot;#fafafa&quot; shape&#x3D;&quot;round&quot; bind:click-input&#x3D;&quot;handleSearchClick&quot; &#x2F;&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>这里使搜索框无法输入，绑定了点击方法，使用户点击搜索框跳转到搜索页面，index.js 中实现方法即可，<code>shape</code>属性可以设置为圆角或者方角</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;**\n  * 事件处理\n  *&#x2F;\n handleSearchClick: function () &#123;\n   wx.navigateTo(&#123;\n     url: &quot;&#x2F;pages&#x2F;detail-search&#x2F;index&quot;,\n   &#125;);\n &#125;,<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>效果如图</li>\n<li><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a5925f6e53354627b9165cd6dcdbc174~tplv-k3u1fbpfcp-zoom-1.image\"></li>\n</ul>\n<p>\\</p>\n<h2 id=\"封装-banner-请求\"><a href=\"#封装-banner-请求\" class=\"headerlink\" title=\"封装 banner 请求\"></a>封装 banner 请求</h2><h3 id=\"新建-service-api-music-js\"><a href=\"#新建-service-api-music-js\" class=\"headerlink\" title=\"新建 service/api_music.js\"></a>新建 service/api_music.js</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">import hyRequest from &quot;.&#x2F;index&quot;;\nexport function getBanners() &#123;\n  return hyRequest.get(&quot;&#x2F;banner&quot;, &#123;\n    type: 2,\n  &#125;);\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>type 的值有四种：0 代表 PC 1 代表 Android 2 代表 Iphone 3 代表 pad</li>\n</ul>\n<p>\\</p>\n<h2 id=\"请求数据并渲染到页面\"><a href=\"#请求数据并渲染到页面\" class=\"headerlink\" title=\"请求数据并渲染到页面\"></a>请求数据并渲染到页面</h2><ol>\n<li> 根据官方文档可知，可以通过以下示例获得每次渲染完成的组件的<code>rect</code></li>\n</ol>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/58041329e4ff4ca985bc5f0c39af2370~tplv-k3u1fbpfcp-zoom-1.image\"></p>\n<ol start=\"2\">\n<li> 新建<code>utils/query-rect.js</code>用以获取组件高度</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">export default function (selector) &#123;\n  return new Promise((resolve) &#x3D;&gt; &#123;\n    &#x2F;&#x2F; 获取图片的高度(如何获取组件高度)\n    const query &#x3D; wx.createSelectorQuery();\n    query.select(selector).boundingClientRect();\n    query.exec((res) &#x3D;&gt; &#123;\n      resolve(res);\n    &#125;);\n  &#125;);\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li> 在<code>pages/home-music/index.js</code>中定义数据和方法，并调用</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; pages&#x2F;home-music&#x2F;index.js\nimport &#123; getBanners &#125; from &quot;..&#x2F;..&#x2F;service&#x2F;api_music&quot;;\nimport queryRect from &quot;..&#x2F;..&#x2F;utils&#x2F;query-rect&quot;;\nimport throttle from &quot;..&#x2F;..&#x2F;utils&#x2F;throttle&quot;;\n\nconst throttleQueryRect &#x3D; throttle(queryRect);\n\nPage(&#123;\n  &#x2F;**\n   * 页面的初始数据\n   *&#x2F;\n  data: &#123;\n    swiperHeight: 0,\n    banners: &#123;&#125;,\n  &#125;,\n\n  &#x2F;**\n   * 生命周期函数--监听页面加载\n   *&#x2F;\n  onLoad: function (options) &#123;\n    this.getPageData();\n  &#125;,\n\n  &#x2F;**\n   * 事件处理\n   *&#x2F;\n  handleSearchClick: function () &#123;\n    wx.navigateTo(&#123;\n      url: &quot;&#x2F;pages&#x2F;detail-search&#x2F;index&quot;,\n    &#125;);\n  &#125;,\n  &#x2F;**\n   * 网络请求\n   *&#x2F;\n  getPageData: function () &#123;\n    getBanners().then((res) &#x3D;&gt; &#123;\n      this.setData(&#123; banners: res.banners &#125;);\n    &#125;);\n  &#125;,\n\n  handleSwiperImageLoaded: function () &#123;\n    &#x2F;&#x2F; 获取图片的高度\n    throttleQueryRect(&quot;#swiper-img&quot;).then((res) &#x3D;&gt; &#123;\n      const rect &#x3D; res[0];\n      this.setData(&#123;\n        swiperHeight: rect.height,\n      &#125;);\n    &#125;);\n  &#125;,\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li> 在<code>pages/home-music/index.wxml</code>中调用数据，并绑定<code>image</code>加载完成的方法<code>bindonload</code></li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!--pages&#x2F;home-music&#x2F;index.wxml--&gt;\n&lt;!-- 搜索框 --&gt;\n&lt;van-search disabled  placeholder&#x3D;&quot;搜索您喜欢的歌曲&quot; background&#x3D;&quot;#fafafa&quot; shape&#x3D;&quot;round&quot; bind:click-input&#x3D;&quot;handleSearchClick&quot; &#x2F;&gt;\n\n&lt;!-- 轮播图 --&gt;\n&lt;swiper class&#x3D;&quot;swiper&quot; style&#x3D;&quot;height:&#123;&#123;swiperHeight&#125;&#125;&quot; indicator-dots autoplay circular&gt;\n  &lt;block wx:for&#x3D;&quot;&#123;&#123;banners&#125;&#125;&quot; wx:key&#x3D;&quot;bannerId&quot;&gt;\n    &lt;swiper-item class&#x3D;&quot;swiper-item&quot; &gt;\n      &lt;image id&#x3D;&quot;swiper-img&quot; class&#x3D;&quot;image&quot; mode&#x3D;&quot;heightFix&quot; src&#x3D;&quot;&#123;&#123;item.pic&#125;&#125;&quot;  bindload&#x3D;&quot;handleSwiperImageLoaded&quot; &#x2F;&gt;\n    &lt;&#x2F;swiper-item&gt;\n  &lt;&#x2F;block&gt;\n&lt;&#x2F;swiper&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>参数说明:</strong></p>\n<ul>\n<li><code>circular</code>无限滑动</li>\n<li><code>mode</code>高度自适应</li>\n</ul>\n<!---->\n\n<ul>\n<li><code>bindload</code>当<code>image</code>标签加载完成时执行</li>\n<li><code>indicator-dots</code>显示小圆点</li>\n</ul>\n<h2 id=\"上面用到的节流函数\"><a href=\"#上面用到的节流函数\" class=\"headerlink\" title=\"上面用到的节流函数\"></a>上面用到的节流函数</h2><p><code>utils/throttle.js</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">export default function throttle(\n  fn,\n  interval &#x3D; 1000,\n  options &#x3D; &#123; leading: true, trailing: false &#125;\n) &#123;\n  &#x2F;&#x2F; 1.记录上一次的开始时间\n  const &#123; leading, trailing, resultCallback &#125; &#x3D; options;\n  let lastTime &#x3D; 0;\n  let timer &#x3D; null;\n\n  &#x2F;&#x2F; 2.事件触发时, 真正执行的函数\n  const _throttle &#x3D; function (...args) &#123;\n    return new Promise((resolve, reject) &#x3D;&gt; &#123;\n      &#x2F;&#x2F; 2.1.获取当前事件触发时的时间\n      const nowTime &#x3D; new Date().getTime();\n      if (!lastTime &amp;&amp; !leading) lastTime &#x3D; nowTime;\n\n      &#x2F;&#x2F; 2.2.使用当前触发的时间和之前的时间间隔以及上一次开始的时间, 计算出还剩余多长事件需要去触发函数\n      const remainTime &#x3D; interval - (nowTime - lastTime);\n      if (remainTime &lt;&#x3D; 0) &#123;\n        if (timer) &#123;\n          clearTimeout(timer);\n          timer &#x3D; null;\n        &#125;\n\n        &#x2F;&#x2F; 2.3.真正触发函数\n        const result &#x3D; fn.apply(this, args);\n        if (resultCallback) resultCallback(result);\n        resolve(result);\n        &#x2F;&#x2F; 2.4.保留上次触发的时间\n        lastTime &#x3D; nowTime;\n        return;\n      &#125;\n\n      if (trailing &amp;&amp; !timer) &#123;\n        timer &#x3D; setTimeout(() &#x3D;&gt; &#123;\n          timer &#x3D; null;\n          lastTime &#x3D; !leading ? 0 : new Date().getTime();\n          const result &#x3D; fn.apply(this, args);\n          if (resultCallback) resultCallback(result);\n          resolve(result);\n        &#125;, remainTime);\n      &#125;\n    &#125;);\n  &#125;;\n\n  _throttle.cancel &#x3D; function () &#123;\n    if (timer) clearTimeout(timer);\n    timer &#x3D; null;\n    lastTime &#x3D; 0;\n  &#125;;\n\n  return _throttle;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>\\</p>\n<h2 id=\"其他：\"><a href=\"#其他：\" class=\"headerlink\" title=\"其他：\"></a>其他：</h2><ul>\n<li>项目地址: <a href=\"https://gitee.com/LUNIONT/xhumusic\">https://gitee.com/LUNIONT/xhumusic</a></li>\n</ul>\n","text":"✅ 引入第三方 UI 库 vant✅ 封装 banner 请求✅ 实时获取组件高度解决不同屏幕中的 swiper 样式问题✅ 使用节流函数优化性能 今日完成效果 \\ 引入 vantUI 库步骤如下 第一步进入微信开发工具，点开详情，勾选使用 npm 模块，并调低基础库，由于当前测...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"实战","slug":"实战","count":3,"path":"api/tags/实战.json"},{"name":"小程序","slug":"小程序","count":2,"path":"api/tags/小程序.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%95%E5%85%A5-vantUI-%E5%BA%93\"><span class=\"toc-text\">引入 vantUI 库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4%E5%A6%82%E4%B8%8B\"><span class=\"toc-text\">步骤如下</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9-UI-%E5%BA%93\"><span class=\"toc-text\">使用第三方 UI 库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%81%E8%A3%85-banner-%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">封装 banner 请求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%BB%BA-service-api-music-js\"><span class=\"toc-text\">新建 service&#x2F;api_music.js</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE%E5%B9%B6%E6%B8%B2%E6%9F%93%E5%88%B0%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">请求数据并渲染到页面</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E9%9D%A2%E7%94%A8%E5%88%B0%E7%9A%84%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">上面用到的节流函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%EF%BC%9A\"><span class=\"toc-text\">其他：</span></a></li></ol>","author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://p26-passport.byteacctimg.com/img/user-avatar/c52fbf24fbba8a052c8dd93e8b978eac~300x300.image","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}},"mapped":true,"prev_post":{"title":"布局中的尺寸与位置","uid":"6436dbae418d43dcb9001fac6bd76e96","slug":"布局中的尺寸与位置","date":"2022-02-11T13:28:00.000Z","updated":"2022-05-27T07:49:11.248Z","comments":true,"path":"api/articles/布局中的尺寸与位置.json","keywords":null,"cover":[],"text":"相对长度单位&emsp;&emsp;相对长度单位相对于其他一些东西，比如父元素的字体大小，或者视图端口的大小。使用相对单位的好处是，经过一些仔细的规划，您可以使文本或其他元素的大小与页面上的其他内容相对应。以下列出了常见相对单位。 单位 名称 em 在font-size中使用是相...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"布局","slug":"布局","count":2,"path":"api/tags/布局.json"},{"name":"css","slug":"css","count":1,"path":"api/tags/css.json"}],"author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://p26-passport.byteacctimg.com/img/user-avatar/c52fbf24fbba8a052c8dd93e8b978eac~300x300.image","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}}},"next_post":{}}