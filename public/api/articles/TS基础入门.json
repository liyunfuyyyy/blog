{"title":"TS基础入门","uid":"46e88b89849dba43d2b30cc4164d9a11","slug":"TS基础入门","date":"2022-04-08T05:52:14.000Z","updated":"2022-05-27T07:49:11.240Z","comments":true,"path":"api/articles/TS基础入门.json","keywords":null,"cover":[],"content":"<h2 id=\"类型\"><a href=\"#类型\" class=\"headerlink\" title=\"类型\"></a>类型</h2><h3 id=\"number类型\"><a href=\"#number类型\" class=\"headerlink\" title=\"number类型\"></a>number类型</h3><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token literal-property property\">num</span><span class=\"token operator\">:</span>number<span class=\"token operator\">=</span><span class=\"token number\">10</span>\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">num</span><span class=\"token operator\">:</span>number<span class=\"token operator\">=</span><span class=\"token number\">10.1</span>\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">num</span><span class=\"token operator\">:</span>number<span class=\"token operator\">=</span><span class=\"token number\">0b110</span>  <span class=\"token comment\">// 二进制</span>\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">num</span><span class=\"token operator\">:</span>number<span class=\"token operator\">=</span><span class=\"token number\">0o555</span>  <span class=\"token comment\">// 八进制</span>\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">num</span><span class=\"token operator\">:</span>number<span class=\"token operator\">=</span><span class=\"token number\">0xf23</span>  <span class=\"token comment\">// 十六进制</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"boolean类型\"><a href=\"#boolean类型\" class=\"headerlink\" title=\"boolean类型\"></a>boolean类型</h3><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token literal-property property\">flag</span><span class=\"token operator\">:</span>boolean<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h3 id=\"string类型\"><a href=\"#string类型\" class=\"headerlink\" title=\"string类型\"></a>string类型</h3><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span>string<span class=\"token operator\">=</span><span class=\"token string\">'hello world'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h3 id=\"Array类型\"><a href=\"#Array类型\" class=\"headerlink\" title=\"Array类型\"></a>Array类型</h3><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token literal-property property\">names</span><span class=\"token operator\">:</span>string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'alen'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'john'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'bob'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> <span class=\"token literal-property property\">names</span><span class=\"token operator\">:</span>Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'alen'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'john'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'bob'</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"Object类型\"><a href=\"#Object类型\" class=\"headerlink\" title=\"Object类型\"></a>Object类型</h3><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token literal-property property\">myInfo</span><span class=\"token operator\">:</span>object<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'john'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">18</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>我们不能从myinfo中获取数据，也不能设置数据，只用来描述一个对象</li>\n</ul>\n<h3 id=\"Symbol类型\"><a href=\"#Symbol类型\" class=\"headerlink\" title=\"Symbol类型\"></a>Symbol类型</h3><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token literal-property property\">s1</span><span class=\"token operator\">:</span>symbol<span class=\"token operator\">=</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token literal-property property\">s2</span><span class=\"token operator\">:</span>symbol<span class=\"token operator\">=</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> person<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">[</span>s1<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span><span class=\"token string\">'程序员'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>s2<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span><span class=\"token string\">'老师'</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"null和undefined类型\"><a href=\"#null和undefined类型\" class=\"headerlink\" title=\"null和undefined类型\"></a>null和undefined类型</h3><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token literal-property property\">n</span><span class=\"token operator\">:</span><span class=\"token keyword\">null</span><span class=\"token operator\">=</span><span class=\"token keyword\">null</span>\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">u</span><span class=\"token operator\">:</span><span class=\"token keyword\">undefined</span><span class=\"token operator\">=</span><span class=\"token keyword\">undefined</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"any类型\"><a href=\"#any类型\" class=\"headerlink\" title=\"any类型\"></a>any类型</h3><ul>\n<li>在某些情况下，我们无法确定一个变量的类型，并且可能它会发生一些变化，这个时候我们可以用any类型</li>\n</ul>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span>any<span class=\"token operator\">=</span><span class=\"token string\">'why'</span>\na<span class=\"token operator\">=</span><span class=\"token number\">123</span>\na<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token literal-property property\">arr</span><span class=\"token operator\">:</span>any<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'why'</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"unknown类型\"><a href=\"#unknown类型\" class=\"headerlink\" title=\"unknown类型\"></a>unknown类型</h3><ul>\n<li>用于描述不确定的变量</li>\n</ul>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>string<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>number<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> flag<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">result</span><span class=\"token operator\">:</span>unknown\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  result<span class=\"token operator\">=</span><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n  result<span class=\"token operator\">=</span><span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> result<span class=\"token operator\">===</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"void类型\"><a href=\"#void类型\" class=\"headerlink\" title=\"void类型\"></a>void类型</h3><ul>\n<li>指定一个函数没有返回值，可以把null和undefined赋值给void，也就是函数可以返回null或者undefined</li>\n<li>函数没有写任何类型，默认返回值的类型就是void</li>\n</ul>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">num1</span><span class=\"token operator\">:</span>number<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">num2</span><span class=\"token operator\">:</span>number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num1<span class=\"token operator\">+</span>num2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"never类型\"><a href=\"#never类型\" class=\"headerlink\" title=\"never类型\"></a>never类型</h3><ul>\n<li>never表示永远不会发生值得类型</li>\n<li>使用never指定死循环或者抛出异常得函数得值类型</li>\n</ul>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">handleMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span>number<span class=\"token operator\">|</span>string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'string'</span><span class=\"token operator\">:</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'number'</span><span class=\"token operator\">:</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">check</span><span class=\"token operator\">:</span>never<span class=\"token operator\">=</span>message\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"tuple类型\"><a href=\"#tuple类型\" class=\"headerlink\" title=\"tuple类型\"></a>tuple类型</h3><ul>\n<li><p>tuple和数组得区别</p>\n<ul>\n<li>数组通常存放相同类型得元素，不同类型得元素是不推荐放在数组中</li>\n<li>元素每个类型都有自己特性得类型，根据索引值获取到得值可以确定对应得类型</li>\n</ul>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token literal-property property\">info</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>string<span class=\"token punctuation\">,</span>number<span class=\"token punctuation\">,</span>number<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'john'</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"tuple的应用场景\"><a href=\"#tuple的应用场景\" class=\"headerlink\" title=\"tuple的应用场景\"></a>tuple的应用场景</h4><ul>\n<li><p>tuple通常可以作为返回的值，在使用的时候会非常的方便</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>newState<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">void</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">let</span> currentState<span class=\"token operator\">=</span>state\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">changeState</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>newState<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n    currentState<span class=\"token operator\">=</span>newState\n  <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>currentState<span class=\"token punctuation\">,</span>changeState<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span>setCounter<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"函数的返回值类型\"><a href=\"#函数的返回值类型\" class=\"headerlink\" title=\"函数的返回值类型\"></a>函数的返回值类型</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>num1<span class=\"token operator\">:</span><span class=\"token builtin\">number</span> <span class=\"token punctuation\">,</span> num2<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> num1<span class=\"token operator\">+</span>num2\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"匿名函数的参数类型\"><a href=\"#匿名函数的参数类型\" class=\"headerlink\" title=\"匿名函数的参数类型\"></a>匿名函数的参数类型</h3><ul>\n<li>匿名函数可以自动推断出参数的类型</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> names<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'def'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ghi'</span><span class=\"token punctuation\">]</span>\nnames<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"对象类型\"><a href=\"#对象类型\" class=\"headerlink\" title=\"对象类型\"></a>对象类型</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">printCoordinate</span><span class=\"token punctuation\">(</span>point<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x坐标'</span><span class=\"token punctuation\">,</span>point<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'y坐标'</span><span class=\"token punctuation\">,</span>point<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">printCoordinate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"可选类型\"><a href=\"#可选类型\" class=\"headerlink\" title=\"可选类型\"></a>可选类型</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">printCoordinate</span><span class=\"token punctuation\">(</span>point<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>z<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x坐标'</span><span class=\"token punctuation\">,</span>point<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'y坐标'</span><span class=\"token punctuation\">,</span>point<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'z坐标'</span><span class=\"token punctuation\">,</span>point<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">printCoordinate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">printCoordinate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span>z<span class=\"token operator\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"联合类型\"><a href=\"#联合类型\" class=\"headerlink\" title=\"联合类型\"></a>联合类型</h3><ul>\n<li>联合类型是由两个或多个其他类型组成的类型</li>\n<li>表示可以是这些类型中的任何一个值</li>\n<li>联合类型中的每一个类型被称之位联合成员</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">printId</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token operator\">|</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你的id是'</span><span class=\"token punctuation\">,</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">printId</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">printId</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"类型别名\"><a href=\"#类型别名\" class=\"headerlink\" title=\"类型别名\"></a>类型别名</h3><ul>\n<li>编写对象类型和联合类型有时需要多次在其他地方使用，可以起别名</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Point</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  x<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>\n  y<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">printPoint</span><span class=\"token punctuation\">(</span>point<span class=\"token operator\">:</span>Point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>point<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sumPoint</span><span class=\"token punctuation\">(</span>point<span class=\"token operator\">:</span>Point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>point<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">printPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">sumPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">ID</span></span><span class=\"token operator\">=</span><span class=\"token builtin\">number</span><span class=\"token operator\">|</span><span class=\"token builtin\">string</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">printId</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span><span class=\"token constant\">ID</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你的id'</span><span class=\"token punctuation\">,</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"断言\"><a href=\"#断言\" class=\"headerlink\" title=\"断言\"></a>断言</h2><h3 id=\"类型断言as\"><a href=\"#类型断言as\" class=\"headerlink\" title=\"类型断言as\"></a>类型断言as</h3><ul>\n<li>有时候TS无法获取具体的类型信息，这时我们就需要使用类型断言</li>\n<li>TS只允许类型断言转换为<code>更具体</code> 或<code>不太具体</code> 的类型版本</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> el<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'box'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HTMLImageElement\n\nel<span class=\"token punctuation\">.</span>src<span class=\"token operator\">=</span><span class=\"token string\">'图片地址'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"非空断言\"><a href=\"#非空断言\" class=\"headerlink\" title=\"非空断言\"></a>非空断言</h3><ul>\n<li><p>当我们编写可选参数的时候，执行TS的编译阶段会报错</p>\n<ul>\n<li><p>这是因为传入的message有可能是undefined</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">printMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>message<span class=\"token operator\">:</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">printMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p>但是，我们确定传入的参数是有值的，这个时候我们可以使用非空类型断言</p>\n<ul>\n<li><p>非空断言使用的是<code>!</code> 表示可以确定某个标识符是有值得，跳过TS在编译阶段对他得检测</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">printMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>message<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"JS新特性\"><a href=\"#JS新特性\" class=\"headerlink\" title=\"JS新特性\"></a>JS新特性</h2><h3 id=\"可选链的使用\"><a href=\"#可选链的使用\" class=\"headerlink\" title=\"可选链的使用\"></a>可选链的使用</h3><ul>\n<li><p>可选链操作符<code>?.</code> </p>\n</li>\n<li><p>作用是当对象的熟悉不存在时，会短路，直接返回undefined，如果存在，那么才会继续执行</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Person</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n  friend<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>\n    girlFriend<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> info<span class=\"token operator\">:</span>Person<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span><span class=\"token string\">'why'</span><span class=\"token punctuation\">,</span>\n  friend<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    name<span class=\"token operator\">:</span><span class=\"token string\">'kobe'</span><span class=\"token punctuation\">,</span>\n    girlFriend<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n      name<span class=\"token operator\">:</span><span class=\"token string\">'lily'</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>friend<span class=\"token operator\">?.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>friend<span class=\"token operator\">?.</span>age<span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>friend<span class=\"token operator\">?.</span>girlFirend<span class=\"token operator\">?.</span>name<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"和-的作用\"><a href=\"#和-的作用\" class=\"headerlink\" title=\"??和!! 的作用\"></a>??和!! 的作用</h3><ul>\n<li><p>！！操作符</p>\n<ul>\n<li>将一个其他类型转换成boolean类型</li>\n<li>类似与Boolean的方式</li>\n</ul>\n</li>\n<li><p>？？操作符</p>\n<ul>\n<li>空值合并操作符是一个逻辑操作符，当操作符的1左侧是null或者undefined时，返回其右侧操作数，否则返回左侧操作数</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> message<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\n<span class=\"token keyword\">let</span> flag<span class=\"token operator\">=</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span>message  <span class=\"token comment\">// true</span>\n\n<span class=\"token keyword\">const</span> message<span class=\"token operator\">=</span><span class=\"token string\">'123'</span>\n<span class=\"token keyword\">const</span> result<span class=\"token operator\">=</span>message<span class=\"token operator\">??</span><span class=\"token string\">'321'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"字面量\"><a href=\"#字面量\" class=\"headerlink\" title=\"字面量\"></a>字面量</h2><h3 id=\"字面量类型\"><a href=\"#字面量类型\" class=\"headerlink\" title=\"字面量类型\"></a>字面量类型</h3><ul>\n<li>多个类型联合起来，可以达到类似enum的效果</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Direction</span> <span class=\"token operator\">=</span> <span class=\"token string\">'TOP'</span><span class=\"token operator\">|</span><span class=\"token string\">'BOTTOM'</span><span class=\"token operator\">|</span><span class=\"token string\">'LEFT'</span><span class=\"token operator\">|</span><span class=\"token string\">'RIGHT'</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">changeDeriction</span><span class=\"token punctuation\">(</span>direction<span class=\"token operator\">:</span>Direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'转向'</span><span class=\"token punctuation\">,</span>align<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">changeDeriction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'LEFT'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"字面量推理\"><a href=\"#字面量推理\" class=\"headerlink\" title=\"字面量推理\"></a>字面量推理</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> info<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  url<span class=\"token operator\">:</span><span class=\"token string\">'https://baidu.com/abc'</span><span class=\"token punctuation\">,</span>\n  method<span class=\"token operator\">:</span><span class=\"token string\">'GET'</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>url<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>method<span class=\"token operator\">:</span><span class=\"token string\">'GET'</span><span class=\"token operator\">|</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>method<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">request</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span>info<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>因为函数参数需要的时<code>GET</code> 或<code>POST</code> 字面量，所以不能将string赋值进去，解决方法</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// 方案1</span>\n<span class=\"token function\">request</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span>info<span class=\"token punctuation\">.</span>method <span class=\"token keyword\">as</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// 方案2</span>\n<span class=\"token keyword\">const</span> info<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  url<span class=\"token operator\">:</span><span class=\"token string\">'https://baidu.com'</span><span class=\"token punctuation\">,</span>\n  method<span class=\"token operator\">:</span><span class=\"token string\">'GET'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><h3 id=\"函数类型\"><a href=\"#函数类型\" class=\"headerlink\" title=\"函数类型\"></a>函数类型</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">CalcFunc</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>num1<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>num2<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">void</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>fn<span class=\"token operator\">:</span>CalcFunc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"参数的可选类型\"><a href=\"#参数的可选类型\" class=\"headerlink\" title=\"参数的可选类型\"></a>参数的可选类型</h3><ul>\n<li>可选类型必须在必传参数的后面</li>\n<li>可选类型的类型是指定的类型和undefined联合</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"默认参数\"><a href=\"#默认参数\" class=\"headerlink\" title=\"默认参数\"></a>默认参数</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"剩余参数\"><a href=\"#剩余参数\" class=\"headerlink\" title=\"剩余参数\"></a>剩余参数</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>nums<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> total<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> num <span class=\"token keyword\">of</span> nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    total<span class=\"token operator\">+=</span>num\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> total\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> result<span class=\"token operator\">=</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"this的类型\"><a href=\"#this的类型\" class=\"headerlink\" title=\"this的类型\"></a>this的类型</h3><ul>\n<li>某些时候可推导</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> info<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span><span class=\"token string\">'why'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">asyHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\ninfo<span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>不可推导时，需要指定</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">NameType</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">:</span>NameType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"函数的重载\"><a href=\"#函数的重载\" class=\"headerlink\" title=\"函数的重载\"></a>函数的重载</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a1<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>a2<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a1<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>a2<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a1<span class=\"token operator\">:</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span>a2<span class=\"token operator\">:</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> a1<span class=\"token operator\">+</span>a2\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aaa'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'bbb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h2><h3 id=\"类的定义\"><a href=\"#类的定义\" class=\"headerlink\" title=\"类的定义\"></a>类的定义</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">!</span><span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n  age<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>age<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token operator\">=</span>age\n  <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token function\">runing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>如果我们不希望给属性初始化，可以使用<code>name!:string</code> 语法，加<code>!</code></li>\n</ul>\n<h3 id=\"类的继承\"><a href=\"#类的继承\" class=\"headerlink\" title=\"类的继承\"></a>类的继承</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span>\n  sno<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>age<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>sno<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token operator\">=</span>sno\n  <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token function\">studying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">+</span><span class=\"token string\">'studying'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"类的成员修饰符\"><a href=\"#类的成员修饰符\" class=\"headerlink\" title=\"类的成员修饰符\"></a>类的成员修饰符</h3><ul>\n<li><strong>public</strong> 任何地方可见，公有的属性或方法，默认编写的属性就是public</li>\n<li><strong>private</strong> 修饰的是仅在同一类中可见、私有的属性或方法</li>\n<li><strong>protected</strong> 仅在自身和子类中可见</li>\n</ul>\n<h3 id=\"只读属性readonly\"><a href=\"#只读属性readonly\" class=\"headerlink\" title=\"只读属性readonly\"></a>只读属性readonly</h3><ul>\n<li>如果有一个属性我们不希望外界可以任意的修改，只希望确定值后直接使用，那么可以使用readonly</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">readonly</span> name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> p<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'why'</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n\np<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span><span class=\"token string\">'code'</span>  <span class=\"token comment\">// error</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"getters-setters\"><a href=\"#getters-setters\" class=\"headerlink\" title=\"getters/setters\"></a>getters/setters</h3><ul>\n<li><p>在前面一些私有属性我们是不能直接访问的，或者某些属性我们想要监听它的获取(getter)和设置(setter)的过程，这个时候我们可以使用存取器</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> _name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n  \n  <span class=\"token keyword\">set</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span>newName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name<span class=\"token operator\">=</span>newName\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name\n  <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> p<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'why'</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span><span class=\"token string\">'coder'</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"静态成员\"><a href=\"#静态成员\" class=\"headerlink\" title=\"静态成员\"></a>静态成员</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">static</span> time<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token operator\">=</span><span class=\"token string\">'20:00'</span>\n  \n  <span class=\"token keyword\">static</span> <span class=\"token function\">attendClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'去上课'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>Student<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span>\nStudent<span class=\"token punctuation\">.</span><span class=\"token function\">attendClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"抽象类abstract\"><a href=\"#抽象类abstract\" class=\"headerlink\" title=\"抽象类abstract\"></a>抽象类abstract</h3><ul>\n<li>抽象方法，必须存在于抽象类中</li>\n<li>抽象类是使用abstruct声明的类</li>\n</ul>\n<h4 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h4><ul>\n<li>抽象类是不能被实例化的(也就是不能通过new创建)</li>\n<li>抽象方法必须被子类实现，否则该类必须是一个抽象类</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Shape</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">abstract</span> <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Circle</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Shape</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> r<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>r<span class=\"token operator\">=</span>r\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>r<span class=\"token operator\">+</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>r<span class=\"token operator\">*</span><span class=\"token number\">3.14</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Rectangle</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Shape</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> width<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n  <span class=\"token keyword\">private</span> height<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>width<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>height<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token operator\">=</span>width\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token operator\">=</span>height\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token operator\">+</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> circle<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> rectangle<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Reactangle</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">calcArea</span><span class=\"token punctuation\">(</span>shape<span class=\"token operator\">:</span>Shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">calcArea</span><span class=\"token punctuation\">(</span>circle<span class=\"token punctuation\">)</span>\n<span class=\"token function\">calcArea</span><span class=\"token punctuation\">(</span>rectangle<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"类的类型\"><a href=\"#类的类型\" class=\"headerlink\" title=\"类的类型\"></a>类的类型</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">runing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">+</span><span class=\"token string\">'running'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> p1<span class=\"token operator\">:</span>Person<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'why'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> p2<span class=\"token operator\">:</span>Person<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span><span class=\"token string\">'kobe'</span><span class=\"token punctuation\">,</span>\n  runing <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">+</span><span class=\"token string\">'runing'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h2><h3 id=\"接口的声明\"><a href=\"#接口的声明\" class=\"headerlink\" title=\"接口的声明\"></a>接口的声明</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interfacce Point<span class=\"token punctuation\">&#123;</span>\n  x<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n  y<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"可选属性\"><a href=\"#可选属性\" class=\"headerlink\" title=\"可选属性\"></a>可选属性</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n  age<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n  friend<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> person<span class=\"token operator\">:</span>Person<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span><span class=\"token string\">'why'</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token operator\">:</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span>\n  friend<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    name<span class=\"token operator\">:</span><span class=\"token string\">'kobe'</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">.</span>friend<span class=\"token operator\">?.</span>name<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"只读属性\"><a href=\"#只读属性\" class=\"headerlink\" title=\"只读属性\"></a>只读属性</h3><ul>\n<li><p>接口中也可以定义只读属性</p>\n<ul>\n<li>这样就意味着我们在初始化之后，这个值是不可以被修改的</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">readonly</span> name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n  age<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n  <span class=\"token keyword\">readonly</span> friend<span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> person<span class=\"token operator\">:</span>Person<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span><span class=\"token string\">'why'</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token operator\">:</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span>\n  friend<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    name<span class=\"token operator\">:</span><span class=\"token string\">'kobe'</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nperson<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span><span class=\"token string\">'code'</span> <span class=\"token comment\">//不可以设置</span>\nperson<span class=\"token punctuation\">.</span>friend<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>  <span class=\"token comment\">//不可以设置</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  person<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span><span class=\"token string\">'123'</span>  <span class=\"token comment\">// 可以</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"索引类型\"><a href=\"#索引类型\" class=\"headerlink\" title=\"索引类型\"></a>索引类型</h3><ul>\n<li>前面我们使用interface来定义对象类型，这个时候其中的属性名、类型、方法都是确定的，但是有时候我们会遇到类似下面的对象</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">FrontLanguage</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">[</span>index<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> frontend<span class=\"token operator\">:</span>FrontLanguage<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token string\">'HTML'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token string\">'CSS'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token string\">'JS'</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LanguageBirth</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">[</span>name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> language<span class=\"token operator\">:</span>LanguageBirth<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string-property property\">\"Java\"</span><span class=\"token operator\">:</span><span class=\"token number\">1999</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"JavaScript\"</span><span class=\"token operator\">:</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"c\"</span><span class=\"token operator\">:</span><span class=\"token number\">1998</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"函数类型-1\"><a href=\"#函数类型-1\" class=\"headerlink\" title=\"函数类型\"></a>函数类型</h3><ul>\n<li>前面我们都是通过interface来定义对象中普通的属性和方法的，实际上它也可以用来定义函数类型</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">CalcFunc</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">(</span>num1<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>num2<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> add<span class=\"token operator\">:</span><span class=\"token function-variable function\">CalcFunc</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span>num2<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> num1<span class=\"token operator\">+</span>num2\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> sub<span class=\"token operator\">:</span><span class=\"token function-variable function\">CalcFunc</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span>num2<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> num1<span class=\"token operator\">-</span>num2\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>推荐使用类型别名来定义函数</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">CalcFunc</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>num1<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>num2<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token builtin\">number</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h3 id=\"接口继承\"><a href=\"#接口继承\" class=\"headerlink\" title=\"接口继承\"></a>接口继承</h3><ul>\n<li><p>接口和类一样是可以进行继承的，也是使用extends关键字</p>\n<ul>\n<li>并且我们会发现，接口是支持多继承的</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n  <span class=\"token function-variable function\">eating</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function-variable function\">runing</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Student</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">,</span>Animal<span class=\"token punctuation\">&#123;</span>\n  sno<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> stu<span class=\"token operator\">:</span>Student<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  sno<span class=\"token operator\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span><span class=\"token string\">'why'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">eating</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">runing</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"接口实现\"><a href=\"#接口实现\" class=\"headerlink\" title=\"接口实现\"></a>接口实现</h3><ul>\n<li>接口定义后，也是可以被类实现的<ul>\n<li>如果被一个类实现，那么在之后需要传入接口的地方，都可以将这个类传入</li>\n<li>这就是面向接口开发</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">ISwim</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function-variable function\">swimming</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IRun</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function-variable function\">runing</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ISwim</span><span class=\"token punctuation\">,</span>IRun<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">swimming</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'swimming'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">running</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'running'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">swim</span><span class=\"token punctuation\">(</span>swimmer<span class=\"token operator\">:</span>ISwim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  swimmer<span class=\"token punctuation\">.</span><span class=\"token function\">swimming</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> p<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">swim</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<h3 id=\"交叉类型\"><a href=\"#交叉类型\" class=\"headerlink\" title=\"交叉类型\"></a>交叉类型</h3><ul>\n<li>交叉类似表示需要满足多个类型的条件</li>\n<li>交叉类型使用&amp;符号</li>\n<li>在开发中进行交叉时，通常是对对象类型进行交叉的</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Colorful</span><span class=\"token punctuation\">&#123;</span>\n  color<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IRun</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function-variable function\">runing</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">NewType</span><span class=\"token operator\">=</span>Colorful<span class=\"token operator\">&amp;</span>IRun\n\n<span class=\"token keyword\">const</span> obj<span class=\"token operator\">:</span>NewType<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  color<span class=\"token operator\">:</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">running</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"interface和type的区别\"><a href=\"#interface和type的区别\" class=\"headerlink\" title=\"interface和type的区别\"></a>interface和type的区别</h3><ul>\n<li>interface可以重复的对某个接口来进行属性和方法</li>\n<li>type定义的是别名，别名是不能重复的</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IPerson</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n  <span class=\"token function-variable function\">running</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IPerson</span><span class=\"token punctuation\">&#123;</span>\n  age<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://raw.githubusercontent.com/liyunfuyyyy/img-url/master/image-20220409124829263.png\" alt=\"image-20220409124829263\"></p>\n<h2 id=\"枚举\"><a href=\"#枚举\" class=\"headerlink\" title=\"枚举\"></a>枚举</h2><h3 id=\"枚举类型\"><a href=\"#枚举类型\" class=\"headerlink\" title=\"枚举类型\"></a>枚举类型</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">enum</span> Direction<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token constant\">LEFT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">RIGHT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">TOP</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">BOTTOM</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">turnDirection</span><span class=\"token punctuation\">(</span>direction<span class=\"token operator\">:</span>Direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> Direction<span class=\"token punctuation\">.</span><span class=\"token constant\">LEFT</span><span class=\"token operator\">:</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'转向左边'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> Direction<span class=\"token punctuation\">.</span><span class=\"token constant\">RIGHT</span><span class=\"token operator\">:</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'转向右边'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> Direction<span class=\"token punctuation\">.</span><span class=\"token constant\">TOP</span><span class=\"token operator\">:</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'转向上边'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> Direction<span class=\"token punctuation\">.</span><span class=\"token constant\">BOTTOM</span><span class=\"token operator\">:</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'转向下边'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">const</span> myDirection<span class=\"token operator\">:</span><span class=\"token builtin\">never</span><span class=\"token operator\">=</span>direction\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<h2 id=\"泛型\"><a href=\"#泛型\" class=\"headerlink\" title=\"泛型\"></a>泛型</h2><h3 id=\"泛型接口\"><a href=\"#泛型接口\" class=\"headerlink\" title=\"泛型接口\"></a>泛型接口</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IFoo<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">&#123;</span>\n  initialValue<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span>\n  valueList<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">handleValue</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> foo<span class=\"token operator\">:</span>IFoo<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">>=</span><span class=\"token punctuation\">&#123;</span>\n  initialValue<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  valueList<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">handleValue</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IFoo<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">=</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">&#123;</span>\n  initialValue<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span>\n  valueList<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">handleValue</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"泛型类\"><a href=\"#泛型类\" class=\"headerlink\" title=\"泛型类\"></a>泛型类</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Point<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">&#123;</span>\n  x<span class=\"token operator\">:</span><span class=\"token constant\">T</span>\n  y<span class=\"token operator\">:</span><span class=\"token constant\">T</span>\n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>x\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span>y\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">const</span> p1<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> p2<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Point<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> p3<span class=\"token operator\">:</span>Point<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">>=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"泛型约束\"><a href=\"#泛型约束\" class=\"headerlink\" title=\"泛型约束\"></a>泛型约束</h3><ul>\n<li><p>有时候我们希望传入的类型有某些共性，但是这些共性可能不是在同一种类型中</p>\n<ul>\n<li>比如string和array都是有length的，或者某些对象也是会有length属性的</li>\n<li>那么只要是拥有length的属性都可以作为我们的参数类型</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">ILength</span><span class=\"token punctuation\">&#123;</span>\n  length<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">getLength</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> ILength<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>args<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> args<span class=\"token punctuation\">.</span>length\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token function\">getLength</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token function\">getLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'cba'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token function\">getLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>length<span class=\"token operator\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>name<span class=\"token operator\">:</span><span class=\"token string\">'why'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">namespace</span> Time<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span>time<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'2022-01-01'</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">namespace</span> Price<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span>price<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'222.22'</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h2><p>当一个模块引用的是另一个模块的数据时，没有引入需要声明</p>\n<h3 id=\"声明变量、函数、类\"><a href=\"#声明变量、函数、类\" class=\"headerlink\" title=\"声明变量、函数、类\"></a>声明变量、函数、类</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// </span>\n<span class=\"token keyword\">let</span> wName<span class=\"token operator\">=</span><span class=\"token string\">'why'</span>\n<span class=\"token keyword\">let</span> mAge<span class=\"token operator\">=</span><span class=\"token number\">19</span>\n<span class=\"token keyword\">let</span> mHeight<span class=\"token operator\">=</span><span class=\"token number\">18</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">wFoo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wfoo'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">wBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wBar'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token operator\">=</span>age\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">let</span> wName<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">let</span> wAge<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">let</span> wHeight<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">wFoo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">wBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span>\n  age<span class=\"token operator\">:</span><span class=\"token builtin\">number</span>\n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>age<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"声明模块\"><a href=\"#声明模块\" class=\"headerlink\" title=\"声明模块\"></a>声明模块</h3><ul>\n<li>我们也可以声明模块，比如lodash模块默认不能使用的情况，可以自己来声明这个模块</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">join</span><span class=\"token punctuation\">(</span>args<span class=\"token operator\">:</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token builtin\">any</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n","text":"类型number类型let num:number=10 let num:number=10.1 let num:number=0b110 // 二进制 let num:number=0o555 // 八进制 let num:number=0xf23 // 十六进制 boolean...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"学习记录","slug":"学习记录","count":1,"path":"api/categories/学习记录.json"}],"tags":[{"name":"TypeScript","slug":"TypeScript","count":1,"path":"api/tags/TypeScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#number%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">number类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#boolean%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">boolean类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#string%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">string类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Array%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Array类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Object%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Object类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Symbol%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Symbol类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#null%E5%92%8Cundefined%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">null和undefined类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#any%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">any类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#unknown%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">unknown类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#void%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">void类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#never%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">never类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tuple%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">tuple类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#tuple%E7%9A%84%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">tuple的应用场景</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">函数的返回值类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">匿名函数的参数类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">对象类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E9%80%89%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">可选类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%81%94%E5%90%88%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">联合类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B%E5%88%AB%E5%90%8D\"><span class=\"toc-text\">类型别名</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%AD%E8%A8%80\"><span class=\"toc-text\">断言</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B%E6%96%AD%E8%A8%80as\"><span class=\"toc-text\">类型断言as</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%9E%E7%A9%BA%E6%96%AD%E8%A8%80\"><span class=\"toc-text\">非空断言</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JS%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">JS新特性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E9%80%89%E9%93%BE%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">可选链的使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%92%8C-%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">??和!! 的作用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E9%9D%A2%E9%87%8F\"><span class=\"toc-text\">字面量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E9%9D%A2%E9%87%8F%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">字面量类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E9%9D%A2%E9%87%8F%E6%8E%A8%E7%90%86\"><span class=\"toc-text\">字面量推理</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">函数类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E6%95%B0%E7%9A%84%E5%8F%AF%E9%80%89%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">参数的可选类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">默认参数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%A9%E4%BD%99%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">剩余参数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#this%E7%9A%84%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">this的类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E7%9A%84%E9%87%8D%E8%BD%BD\"><span class=\"toc-text\">函数的重载</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B1%BB\"><span class=\"toc-text\">类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">类的定义</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E7%BB%A7%E6%89%BF\"><span class=\"toc-text\">类的继承</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E6%88%90%E5%91%98%E4%BF%AE%E9%A5%B0%E7%AC%A6\"><span class=\"toc-text\">类的成员修饰符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AA%E8%AF%BB%E5%B1%9E%E6%80%A7readonly\"><span class=\"toc-text\">只读属性readonly</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getters-setters\"><span class=\"toc-text\">getters&#x2F;setters</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E6%88%90%E5%91%98\"><span class=\"toc-text\">静态成员</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8A%BD%E8%B1%A1%E7%B1%BBabstract\"><span class=\"toc-text\">抽象类abstract</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">特点</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">类的类型</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">接口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">接口的声明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E9%80%89%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">可选属性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AA%E8%AF%BB%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">只读属性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B4%A2%E5%BC%95%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">索引类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E7%B1%BB%E5%9E%8B-1\"><span class=\"toc-text\">函数类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3%E7%BB%A7%E6%89%BF\"><span class=\"toc-text\">接口继承</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">接口实现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%A4%E5%8F%89%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">交叉类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#interface%E5%92%8Ctype%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">interface和type的区别</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%9A%E4%B8%BE\"><span class=\"toc-text\">枚举</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">枚举类型</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%9B%E5%9E%8B\"><span class=\"toc-text\">泛型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%9B%E5%9E%8B%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">泛型接口</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%9B%E5%9E%8B%E7%B1%BB\"><span class=\"toc-text\">泛型类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%9B%E5%9E%8B%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">泛型约束</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4\"><span class=\"toc-text\">命名空间</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">声明</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A3%B0%E6%98%8E%E5%8F%98%E9%87%8F%E3%80%81%E5%87%BD%E6%95%B0%E3%80%81%E7%B1%BB\"><span class=\"toc-text\">声明变量、函数、类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A3%B0%E6%98%8E%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">声明模块</span></a></li></ol></li></ol>","author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://p26-passport.byteacctimg.com/img/user-avatar/c52fbf24fbba8a052c8dd93e8b978eac~300x300.image","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}},"mapped":true,"prev_post":{"title":"Webpack配置及打包vue","uid":"1cfec3e13a62702637234d5f7c53b3fc","slug":"Webpack配置及打包vue","date":"2022-04-10T12:08:54.000Z","updated":"2022-05-27T07:49:11.242Z","comments":true,"path":"api/articles/Webpack配置及打包vue.json","keywords":null,"cover":[],"text":" 安装webpack``webpack-cli npm install webpack webpack-cli -D 配置入口出口 // webpack.config.js module.exports = &#123; mode: 'development', entry: '...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"知识点","slug":"知识点","count":8,"path":"api/categories/知识点.json"}],"tags":[{"name":"工程化","slug":"工程化","count":1,"path":"api/tags/工程化.json"},{"name":"vue","slug":"vue","count":1,"path":"api/tags/vue.json"}],"author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://p26-passport.byteacctimg.com/img/user-avatar/c52fbf24fbba8a052c8dd93e8b978eac~300x300.image","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}}},"next_post":{"title":"HTML知识点","uid":"1b47919438b08a0e56e1fac60890eb9a","slug":"HTML知识点","date":"2022-03-15T01:13:09.000Z","updated":"2022-05-27T07:49:11.237Z","comments":true,"path":"api/articles/HTML知识点.json","keywords":null,"cover":null,"text":"1. 如何理解HTML语义化优点 对机器友好，更适合搜索引擎的爬取，有利于SEO。支持读屏软件，根据文章可以自动生成目录 对开发者友好，增强可读性，结构更加清晰，便于维护 常见语义化标签 &lt;header>头部&lt;/header> &lt;nav>导航栏&lt;/nav>...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"知识点","slug":"知识点","count":8,"path":"api/categories/知识点.json"}],"tags":[{"name":"HTML","slug":"HTML","count":1,"path":"api/tags/HTML.json"},{"name":"面试","slug":"面试","count":3,"path":"api/tags/面试.json"}],"author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://p26-passport.byteacctimg.com/img/user-avatar/c52fbf24fbba8a052c8dd93e8b978eac~300x300.image","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}}}}