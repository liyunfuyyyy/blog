{"title":"git命令备忘录","uid":"deb07f2084ce5c6636760b3189f1eaa0","slug":"git命令备忘录","date":"2022-03-05T03:08:36.000Z","updated":"2022-03-05T03:09:17.510Z","comments":true,"path":"api/articles/git命令备忘录.json","keywords":null,"cover":null,"content":"<ul>\n<li>git init 初始化版本库</li>\n<li>git add 每次提交前都要添加</li>\n<li>git commit -m “修改信息”  </li>\n<li>git log 打印提交记录</li>\n<li>git diff readme  查看版本区别</li>\n<li>git reset 回到某个版本  <code>git reset --hard  版本代号</code></li>\n<li>git reflog 打印操作记录 再使用<code>git reset 版本号</code>可以到未来</li>\n<li>工作区的文件<code>git add</code>之后到了暂存区，暂存区<code>git commit</code>一次性提交到<code>master</code>分支</li>\n<li><code>git diff HEAD -- readme.txt</code> 查看工作区和版本库里面最新版本的区别</li>\n<li><code>git checkout -- readme.txt</code> 丢弃工作区的修改，从暂存区恢复</li>\n<li><code>git reset HEAD readme.txt</code>暂存区回到上一个版本</li>\n<li><code>git remote add origin git@github.com:michaelliao/learngit.git</code> 关联远程仓库</li>\n<li><code>git push -u origin master</code>第一次推送</li>\n<li><code>git push origin master</code>以后推送</li>\n<li><code>git remote -v</code>查看远程仓库</li>\n<li><code>git remote rm origin</code>解除远程仓库</li>\n<li><code>git switch -c dev</code>创建并切换到新的<code>dev</code>分支</li>\n<li><code>git switch master</code>切换到master分支</li>\n<li><code>git branch</code>查看分支</li>\n<li><code>git branch -d dev</code>删除分支</li>\n<li><code>git merge dev</code>将dev分支合并到当前分支上</li>\n<li><code>git merge --no-ff -m &quot;merge with no-ff&quot; dev</code>合并分支并禁用快速合并</li>\n<li><code>git stash</code>把当前工作现场储存下来，方便下一次恢复现场继续工作 </li>\n<li><code>git stash pop</code>恢复现场，并把stash内容删除</li>\n<li><code>git cherry-pick &lt;commit&gt;</code>  如果当前也有bug 就把原先的提交复制到这儿一份</li>\n<li>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签；</li>\n<li>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签；</li>\n<li>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签；</li>\n<li>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签。</li>\n</ul>\n","feature":true,"text":" git init 初始化版本库 git add 每次提交前都要添加 git commit -m “修改信息” git log 打印提交记录 git diff readme 查看版本区别 git reset 回到某个版本 git reset --hard 版本代号 git ref...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"知识点","slug":"知识点","count":2,"path":"api/categories/知识点.json"}],"tags":[{"name":"git","slug":"git","count":2,"path":"api/tags/git.json"},{"name":"备忘录","slug":"备忘录","count":1,"path":"api/tags/备忘录.json"}],"toc":"","author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://gitee.com/LUNIONT/img-url/raw/master/202201011746808.jpg","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"ajax基本使用及跨域过程","uid":"6f0689131b9192e324f81c8459e5c263","slug":"ajax基本使用及跨域过程","date":"2022-03-05T03:06:30.000Z","updated":"2022-03-05T03:07:17.270Z","comments":true,"path":"api/articles/ajax基本使用及跨域过程.json","keywords":null,"cover":null,"text":"ajax 是什么：ajax是Asynchronous JavaScript and XML（异步 JavaScript 和 XMl）的简写 异步：异步得像服务器发送请求，在等待响应的过程中，不会阻塞当前页面，浏览器可以做自己的事情。直到成功获取响应后，浏览器才开始处理响应数据 A...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"知识点","slug":"知识点","count":2,"path":"api/categories/知识点.json"}],"tags":[{"name":"ajax","slug":"ajax","count":1,"path":"api/tags/ajax.json"},{"name":"跨域","slug":"跨域","count":1,"path":"api/tags/跨域.json"}],"author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://gitee.com/LUNIONT/img-url/raw/master/202201011746808.jpg","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}},"feature":true}}