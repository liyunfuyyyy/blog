{"title":"MongoDB的CRUD","uid":"2dd921bc2e0b67b467ed4b61518bdc3d","slug":"MongoDB的CRUD","date":"2022-03-05T02:54:11.000Z","updated":"2022-03-26T11:20:43.742Z","comments":true,"path":"api/articles/MongoDB的CRUD.json","keywords":null,"cover":[],"content":"<h2 id=\"MongoDB初见\"><a href=\"#MongoDB初见\" class=\"headerlink\" title=\"MongoDB初见\"></a>MongoDB初见</h2><p><img src=\"https://raw.githubusercontent.com/liyunfuyyyy/img-url/master/202201071332826.png\" alt=\"image-20220107133258717\"></p>\n<h3 id=\"Docker中MongoDB数据的备份与恢复\"><a href=\"#Docker中MongoDB数据的备份与恢复\" class=\"headerlink\" title=\"Docker中MongoDB数据的备份与恢复\"></a>Docker中MongoDB数据的备份与恢复</h3><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#备份\ndocker exec -it 镜像名 mongodump -h 地址 -u root -p example -o 备份到的地址\ndocker exec -it some-mongo mongodump -h localhost -u root -p example -o &#x2F;temp&#x2F;test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"是什么\"><a href=\"#是什么\" class=\"headerlink\" title=\"是什么\"></a>是什么</h3><ul>\n<li>存储<code>文档</code>的<code>非关系型</code>数据库</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/liyunfuyyyy/img-url/master/202201020938923.png\" alt=\"image-20220102093831863\"></p>\n<ul>\n<li>可以将多个不同的内容添加到一个集合里面，如果想要添加字段，直接添加，不会报错</li>\n</ul>\n<h2 id=\"MongoDB的CRUD\"><a href=\"#MongoDB的CRUD\" class=\"headerlink\" title=\"MongoDB的CRUD\"></a>MongoDB的CRUD</h2><h3 id=\"创建文档\"><a href=\"#创建文档\" class=\"headerlink\" title=\"创建文档\"></a>创建文档</h3><h4 id=\"创建一个文档\"><a href=\"#创建一个文档\" class=\"headerlink\" title=\"创建一个文档\"></a>创建一个文档</h4><ul>\n<li>自己提供文档主键<code>_id</code>值，容易出现错误，可以省略文档<code>_id</code>字段，让它自动生成，<code>collection</code>为集合</li>\n</ul>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.collection.insertOne(\n\t&#123;\n\t_id: &quot;account1&quot;,\n\tname: &quot;alice&quot;,\n\tbalance: 100\n\t&#125;\n)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.collection.insertOne(\n\t&#123;\n\tname: &quot;alice&quot;,\n\tbalance: 100\n\t&#125;\n)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"创建多个文档\"><a href=\"#创建多个文档\" class=\"headerlink\" title=\"创建多个文档\"></a>创建多个文档</h4><ul>\n<li><code>ordered</code>参数用来决定mongoDB是否要按顺序来写入这些文档<ul>\n<li><code>ordered:false</code> 表示可以打乱文档写入顺序，以便优化写入的操作</li>\n<li><code>ordered:true(默认值)</code>按顺序执行，如果第一条插入数据错误，那么第二天不会执行</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.insertMany(\n\t[\n\t\t&#123;\n\t\tname: &quot;alice1&quot;,\n\t\tbalance: 100\n\t\t&#125;,\n\t\t&#123;\n\t\tname: &quot;alice2&quot;,\n\t\tbalance: 200\n\t\t&#125;\n\t]\t,\n\t&#123;\n\t\tordered:false  &#x2F;&#x2F;可选\n\t&#125;\n)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://raw.githubusercontent.com/liyunfuyyyy/img-url/master/202201020954929.png\" alt=\"image-20220102095450876\"></p>\n<h4 id=\"创建单个或多个文档\"><a href=\"#创建单个或多个文档\" class=\"headerlink\" title=\"创建单个或多个文档\"></a>创建单个或多个文档</h4><ul>\n<li><code>save</code>命令运行时调用<code>insert</code>   <code>db.collection.save</code> </li>\n</ul>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.insert(\n\t&#123;\n\tname: &quot;alice1&quot;,\n\tbalance: 100\n\t&#125;,\n)\n\ndb.accounts.insert(\n\t[\n\t\t&#123;\n\t\tname: &quot;alice1&quot;,\n\t\tbalance: 100\n\t\t&#125;,\n\t\t&#123;\n\t\tname: &quot;alice2&quot;,\n\t\tbalance: 200\n\t\t&#125;\n\t]\t\n)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"insertOne-、insertMany-、insert的区别\"><a href=\"#insertOne-、insertMany-、insert的区别\" class=\"headerlink\" title=\"insertOne 、insertMany 、insert的区别\"></a><code>insertOne</code> 、<code>insertMany</code> 、<code>insert</code>的区别</h4><ul>\n<li><p>正确和错误返回的结果不同</p>\n</li>\n<li><p><code>insertOne</code>和<code>insertMany</code>命令不支持<code>db.collection.explain()</code>名</p>\n</li>\n<li><p><code>insert</code>支持<code>db.collection.explain</code>命令</p>\n</li>\n</ul>\n<h3 id=\"读取文档\"><a href=\"#读取文档\" class=\"headerlink\" title=\"读取文档\"></a>读取文档</h3><h4 id=\"读取全部文档\"><a href=\"#读取全部文档\" class=\"headerlink\" title=\"读取全部文档\"></a>读取全部文档</h4><ul>\n<li><p>既不筛选，也不投射</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>更清晰的显示文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find().pretty()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"匹配查询\"><a href=\"#匹配查询\" class=\"headerlink\" title=\"匹配查询\"></a>匹配查询</h4><ul>\n<li><p>读取alice的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;name: &quot;alice&quot;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>读取alice的余额为100元的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;name: &quot;alice&quot;,balance: 100&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>读取复合主键的文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;&quot;_id.type&quot;: &quot;savings&quot;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"比较操作符\"><a href=\"#比较操作符\" class=\"headerlink\" title=\"比较操作符\"></a>比较操作符</h4><table>\n<thead>\n<tr>\n<th>操作符</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$eq</td>\n<td><strong>相等</strong>查询值的文档</td>\n</tr>\n<tr>\n<td>$ne</td>\n<td><strong>不等</strong>查询值的文档</td>\n</tr>\n<tr>\n<td>$gt</td>\n<td><strong>大于</strong>查询值的文档</td>\n</tr>\n<tr>\n<td>$gte</td>\n<td><strong>大于或等于</strong>查询值的文档</td>\n</tr>\n<tr>\n<td>$lt</td>\n<td><strong>小于</strong>查询值的文档</td>\n</tr>\n<tr>\n<td>$lte</td>\n<td><strong>小于或等于</strong>查询值的文档</td>\n</tr>\n<tr>\n<td>$in</td>\n<td>与任一查询值相等的文档</td>\n</tr>\n<tr>\n<td>$nin</td>\n<td>与任何查询值都不等的文档</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>读取不属于alice的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;name: &#123;$ne:&quot;alice&quot;&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>读取余额大于500的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;balance: &#123;$gt:500&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>读取用户名字排在fred之前的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;name: &#123;$lt:&quot;fred&quot;&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>读取alice和charlie的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;name: &#123;$in:[&quot;alice&quot;,&quot;charlie&quot;]&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>读取既不是alice和charlie的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;name: &#123;$nin:[&quot;alice&quot;,&quot;charlie&quot;]&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"逻辑操作符\"><a href=\"#逻辑操作符\" class=\"headerlink\" title=\"逻辑操作符\"></a>逻辑操作符</h4><table>\n<thead>\n<tr>\n<th>逻辑操作符</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$not</td>\n<td>筛选条件不成立的文档</td>\n</tr>\n<tr>\n<td>$and</td>\n<td>多个条件全部成立的文档</td>\n</tr>\n<tr>\n<td>$or</td>\n<td>至少一个筛选条件成立的文档</td>\n</tr>\n<tr>\n<td>$nor</td>\n<td>多个筛选条件全部不成立的文档</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>读取余额不小于500的银行账户文档  </p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;balance:&#123;$not:&#123;$lt:500&#125;&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>读取余额大于100并且用户姓名排在fred之后的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;$and:[&#123;balance:&#123;$gt:100&#125;&#125;,&#123;name:&#123;$gt:&quot;fred&quot;&#125;&#125;]&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>读取余额大于100并且小于500的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;balance:&#123;$lt:500,$gt:100&#125;&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>读取属于alice或者charlie的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;\n\t$or:[\n\t\t&#123;name:&#123;$eq:&quot;alice&quot;&#125;&#125;,\n\t\t&#123;name:&#123;$eq:&quot;charlie&quot;&#125;&#125;\n\t]\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>读取既不属于alice和charlie且余额不小于100的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;\n\t$nor:[\n\t\t&#123;name:&quot;alice&quot;&#125;,\n\t\t&#123;name:&quot;charlie&quot;&#125;,\n\t\t&#123;balance:&#123;$lt:100&#125;&#125;\n\t]\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"字段操作符\"><a href=\"#字段操作符\" class=\"headerlink\" title=\"字段操作符\"></a>字段操作符</h4><table>\n<thead>\n<tr>\n<th>操作符</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$exists</td>\n<td>包含查询字段的文档</td>\n</tr>\n<tr>\n<td>$type</td>\n<td>字段类型符合查询值的文档</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>读取包含账户类型字段的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;&quot;_id.type&quot;:&#123;$exists:true&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>读取文档主键是字符串的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;_id:&#123;$type:&quot;string&quot;&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"数组操作符\"><a href=\"#数组操作符\" class=\"headerlink\" title=\"数组操作符\"></a>数组操作符</h4><table>\n<thead>\n<tr>\n<th>操作符</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$all</td>\n<td>数组字段中包含所有查询值的文档</td>\n</tr>\n<tr>\n<td>$elemMatch</td>\n<td>数组字段中至少存在一个值满足筛选条件的文档</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>读取联系地址位于中国北京的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;contact:&#123;$all:[&quot;china&quot;,&quot;beijing&quot;]&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>读取联系电话范围在100000和200000之间的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;contact:&#123;$elemMatch:&#123;$gt:&quot;100000&quot;,$lt:&quot;200000&quot;&#125;&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"正则操作符\"><a href=\"#正则操作符\" class=\"headerlink\" title=\"正则操作符\"></a>正则操作符</h4><ul>\n<li><p>读取用户姓名以c或者j开头的银行账号文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;name:&#123;$in:[&#x2F;^c&#x2F;,&#x2F;^j&#x2F;]&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>读取用户姓名包含LIE(不区分大小写)的银行账户文档</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">db.accounts.find(&#123;name:&#123;$regex:&#x2F;LIE&#x2F;,$options:&#39;i&#39;&#125;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"文档游标\"><a href=\"#文档游标\" class=\"headerlink\" title=\"文档游标\"></a>文档游标</h3><ul>\n<li>查询语句默认返回的是文档游标，默认只显示前二十条</li>\n</ul>\n<h4 id=\"游标函数\"><a href=\"#游标函数\" class=\"headerlink\" title=\"游标函数\"></a>游标函数</h4><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> cursor<span class=\"token operator\">=</span>db<span class=\"token punctuation\">.</span>accounts<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p><code>cursor.hasNext()</code> <code>cursor.next()</code></p>\n</li>\n<li><p>```js<br>var myCursor=db.accounts.find({name:”alice”})<br>while(myCursor.hasNext()){<br>  printjson(myCursor.next())<br>}  //只要还有就把剩余文档打印出来</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n- &#96;cursor.forEach()&#96;\n\n- &#96;&#96;&#96;js\n  var myCursor&#x3D;db.accounts.find(&#123;name:&quot;alice&quot;&#125;)\n  myCursor.forEach(printjson)   &#x2F;&#x2F;每篇文档被打印<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p><code>cursor.limit()</code></p>\n</li>\n<li><p><code>cursor.skip()</code></p>\n</li>\n<li><p>```js<br>db.accounts.find({name:”alice”}).limit(1)  //只返回第一篇文档<br>db.accounts.find({name:”alice”}).skip(1)   //跳过第一篇 只显示第二篇和第三篇</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n- &#96;cursor.count()&#96;\n\n- &#96;&#96;&#96;js\n  db.accounts.find(&#123;name:&quot;alice&quot;&#125;).limit(1).count()   &#x2F;&#x2F;返回3\n  db.accounts.find(&#123;name:&quot;alice&quot;&#125;).limit(1).count(true)  &#x2F;&#x2F;返回1\n  &#x2F;&#x2F;默认不接收limit和skip返回的结果<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p><code>cursor.sort()</code></p>\n<ul>\n<li><p>按照余额从大到小，用户名按字母顺序排序</p>\n</li>\n<li><p>```js<br>db.accounts.find().sort({balance:-1,name:1})</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n\n\n#### 游标注意事件\n\n- &#96;cursor.skip()&#96;在&#96;cursor.limit()&#96;之前执行\n- &#96;cursor.sort()&#96;在&#96;cursor.skip()&#96;和&#96;cursor.limit()&#96;之前执行\n\n\n\n#### 文档投影\n\n- 只返回银行账户文档中的用户姓名\n\n- &#96;&#96;&#96;js\n  db.accounts.find(&#123;&#125;,&#123;name:1&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p>只返回银行账户文档中的用户姓名(不包含文档主键)</p>\n</li>\n<li><pre><code class=\"js\">db.accounts.find(&#123;&#125;,&#123;name:1,_id:0&#125;)\n</code></pre>\n</li>\n<li><p><mark>除了文档主键之外，我们不可以在投影文档中混合使用包含和不包含这两种投影操作要么在投影文档中列出所有应该包含的字段，要么列出所有不应该包含的字段</mark></p>\n</li>\n</ul>\n<h3 id=\"更新文档\"><a href=\"#更新文档\" class=\"headerlink\" title=\"更新文档\"></a>更新文档</h3>","text":"MongoDB初见 Docker中MongoDB数据的备份与恢复#备份 docker exec -it 镜像名 mongodump -h 地址 -u root -p example -o 备份到的地址 docker exec -it some-mongo mongodump -h...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"实战","slug":"实战","count":5,"path":"api/categories/实战.json"}],"tags":[{"name":"MongoDB","slug":"MongoDB","count":1,"path":"api/tags/MongoDB.json"},{"name":"数据库","slug":"数据库","count":2,"path":"api/tags/数据库.json"},{"name":"Mongoose","slug":"Mongoose","count":1,"path":"api/tags/Mongoose.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MongoDB%E5%88%9D%E8%A7%81\"><span class=\"toc-text\">MongoDB初见</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Docker%E4%B8%ADMongoDB%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D\"><span class=\"toc-text\">Docker中MongoDB数据的备份与恢复</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">是什么</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MongoDB%E7%9A%84CRUD\"><span class=\"toc-text\">MongoDB的CRUD</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">创建文档</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">创建一个文档</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%A4%9A%E4%B8%AA%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">创建多个文档</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%8D%95%E4%B8%AA%E6%88%96%E5%A4%9A%E4%B8%AA%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">创建单个或多个文档</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#insertOne-%E3%80%81insertMany-%E3%80%81insert%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">insertOne 、insertMany 、insert的区别</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%BB%E5%8F%96%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">读取文档</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%BB%E5%8F%96%E5%85%A8%E9%83%A8%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">读取全部文档</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8C%B9%E9%85%8D%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">匹配查询</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AF%94%E8%BE%83%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">比较操作符</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">逻辑操作符</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%97%E6%AE%B5%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">字段操作符</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">数组操作符</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E5%88%99%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">正则操作符</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%A1%A3%E6%B8%B8%E6%A0%87\"><span class=\"toc-text\">文档游标</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B8%B8%E6%A0%87%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">游标函数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%96%B0%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">更新文档</span></a></li></ol></li></ol>","author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://p26-passport.byteacctimg.com/img/user-avatar/c52fbf24fbba8a052c8dd93e8b978eac~300x300.image","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}},"mapped":true,"prev_post":{"title":"基于koa-generator实现验证码功能","uid":"fe45cec90ec11b72673f92c41490ffd7","slug":"基于koa-generator实现验证码功能","date":"2022-03-05T02:56:54.000Z","updated":"2022-03-26T11:15:44.701Z","comments":true,"path":"api/articles/基于koa-generator实现验证码功能.json","keywords":null,"cover":[],"text":"第一步 全局安装koa-generator ```shellnpm install -g koa-generator - 生成基本框架 - &#96;&#96;&#96;shell koa2 apiname # 使用koa2后面接目录名即可自动创建名为apiname的目录 根据命...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"实战","slug":"实战","count":5,"path":"api/categories/实战.json"}],"tags":[{"name":"Koa","slug":"Koa","count":1,"path":"api/tags/Koa.json"}],"author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://p26-passport.byteacctimg.com/img/user-avatar/c52fbf24fbba8a052c8dd93e8b978eac~300x300.image","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}}},"next_post":{"title":"JSX如何\"摇身一变\"成为DOM的","uid":"b9b69e275d0ea3fd4374ffde1f72e980","slug":"JSX如何变成DOM","date":"2022-02-27T09:46:50.000Z","updated":"2022-03-26T11:19:52.255Z","comments":true,"path":"api/articles/JSX如何变成DOM.json","keywords":null,"cover":[],"text":"JSX代码如何变成DOM抛出问题 JSX的本质是什么，它和JS之间到底是什么关系？ 为什么要用JSX？不用会有什么后果？ JSX背后的功能模块是什么，这个功能模块都做了那些事 尝试解答 JSX的本质是JS的拓展，但是浏览器不能天然支持JSX，所以需要Babel将它编译为React...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"React源码","slug":"React源码","count":1,"path":"api/categories/React源码.json"}],"tags":[{"name":"React","slug":"React","count":2,"path":"api/tags/React.json"},{"name":"源码","slug":"源码","count":1,"path":"api/tags/源码.json"}],"author":{"name":"LIYUNFU","slug":"blog-author","avatar":"https://p26-passport.byteacctimg.com/img/user-avatar/c52fbf24fbba8a052c8dd93e8b978eac~300x300.image","link":"/","description":"一个正在重塑知识的切图仔 <br /> @ <b>公众号:伯nulee</b>","socials":{"github":"https://gitee.com/LUNIONT","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2277843824292183","customs":{}}}}}